

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 09 16:03:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18323
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F18323 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0097                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  018C                     	;# 
   118  018E                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019C                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020E                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  028C                     	;# 
   164  028E                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0297                     	;# 
   174  0298                     	;# 
   175  030C                     	;# 
   176  030E                     	;# 
   177  038C                     	;# 
   178  038E                     	;# 
   179  0391                     	;# 
   180  0392                     	;# 
   181  0393                     	;# 
   182  0397                     	;# 
   183  0398                     	;# 
   184  0399                     	;# 
   185  039A                     	;# 
   186  039C                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0498                     	;# 
   191  0498                     	;# 
   192  0499                     	;# 
   193  049A                     	;# 
   194  049B                     	;# 
   195  049B                     	;# 
   196  049C                     	;# 
   197  049D                     	;# 
   198  049E                     	;# 
   199  049F                     	;# 
   200  0617                     	;# 
   201  0618                     	;# 
   202  0619                     	;# 
   203  0619                     	;# 
   204  061A                     	;# 
   205  061B                     	;# 
   206  061C                     	;# 
   207  061C                     	;# 
   208  0691                     	;# 
   209  0692                     	;# 
   210  0693                     	;# 
   211  0694                     	;# 
   212  0695                     	;# 
   213  0696                     	;# 
   214  0697                     	;# 
   215  0698                     	;# 
   216  0699                     	;# 
   217  0891                     	;# 
   218  0891                     	;# 
   219  0891                     	;# 
   220  0891                     	;# 
   221  0891                     	;# 
   222  0891                     	;# 
   223  0892                     	;# 
   224  0892                     	;# 
   225  0892                     	;# 
   226  0893                     	;# 
   227  0893                     	;# 
   228  0893                     	;# 
   229  0893                     	;# 
   230  0893                     	;# 
   231  0893                     	;# 
   232  0894                     	;# 
   233  0894                     	;# 
   234  0894                     	;# 
   235  0895                     	;# 
   236  0895                     	;# 
   237  0895                     	;# 
   238  0896                     	;# 
   239  0896                     	;# 
   240  0896                     	;# 
   241  089B                     	;# 
   242  0911                     	;# 
   243  0912                     	;# 
   244  0913                     	;# 
   245  0914                     	;# 
   246  0915                     	;# 
   247  0916                     	;# 
   248  0918                     	;# 
   249  0919                     	;# 
   250  091A                     	;# 
   251  091B                     	;# 
   252  091C                     	;# 
   253  091D                     	;# 
   254  091E                     	;# 
   255  091F                     	;# 
   256  0E0F                     	;# 
   257  0E10                     	;# 
   258  0E11                     	;# 
   259  0E12                     	;# 
   260  0E13                     	;# 
   261  0E14                     	;# 
   262  0E15                     	;# 
   263  0E18                     	;# 
   264  0E1A                     	;# 
   265  0E1B                     	;# 
   266  0E1C                     	;# 
   267  0E20                     	;# 
   268  0E21                     	;# 
   269  0E22                     	;# 
   270  0E24                     	;# 
   271  0E25                     	;# 
   272  0E28                     	;# 
   273  0E29                     	;# 
   274  0E2A                     	;# 
   275  0E2B                     	;# 
   276  0E90                     	;# 
   277  0E91                     	;# 
   278  0E92                     	;# 
   279  0E94                     	;# 
   280  0E95                     	;# 
   281  0EA0                     	;# 
   282  0EA1                     	;# 
   283  0EA2                     	;# 
   284  0EA3                     	;# 
   285  0EA4                     	;# 
   286  0EA5                     	;# 
   287  0F0F                     	;# 
   288  0F10                     	;# 
   289  0F11                     	;# 
   290  0F12                     	;# 
   291  0F13                     	;# 
   292  0F14                     	;# 
   293  0F15                     	;# 
   294  0F16                     	;# 
   295  0F17                     	;# 
   296  0F18                     	;# 
   297  0F19                     	;# 
   298  0F1A                     	;# 
   299  0F1B                     	;# 
   300  0F1C                     	;# 
   301  0F1D                     	;# 
   302  0F1E                     	;# 
   303  0F1F                     	;# 
   304  0F20                     	;# 
   305  0F21                     	;# 
   306  0F22                     	;# 
   307  0F23                     	;# 
   308  0FE4                     	;# 
   309  0FE5                     	;# 
   310  0FE6                     	;# 
   311  0FE7                     	;# 
   312  0FE8                     	;# 
   313  0FE9                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEF                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000E                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  008C                     	;# 
   353  008E                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0097                     	;# 
   360  009B                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  010C                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  018C                     	;# 
   378  018E                     	;# 
   379  0197                     	;# 
   380  0199                     	;# 
   381  0199                     	;# 
   382  0199                     	;# 
   383  019A                     	;# 
   384  019A                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019C                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019D                     	;# 
   396  019D                     	;# 
   397  019E                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  020C                     	;# 
   406  020E                     	;# 
   407  0211                     	;# 
   408  0211                     	;# 
   409  0212                     	;# 
   410  0212                     	;# 
   411  0213                     	;# 
   412  0213                     	;# 
   413  0214                     	;# 
   414  0214                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  028C                     	;# 
   424  028E                     	;# 
   425  0291                     	;# 
   426  0291                     	;# 
   427  0292                     	;# 
   428  0293                     	;# 
   429  0294                     	;# 
   430  0295                     	;# 
   431  0295                     	;# 
   432  0296                     	;# 
   433  0297                     	;# 
   434  0298                     	;# 
   435  030C                     	;# 
   436  030E                     	;# 
   437  038C                     	;# 
   438  038E                     	;# 
   439  0391                     	;# 
   440  0392                     	;# 
   441  0393                     	;# 
   442  0397                     	;# 
   443  0398                     	;# 
   444  0399                     	;# 
   445  039A                     	;# 
   446  039C                     	;# 
   447  039D                     	;# 
   448  039E                     	;# 
   449  039F                     	;# 
   450  0498                     	;# 
   451  0498                     	;# 
   452  0499                     	;# 
   453  049A                     	;# 
   454  049B                     	;# 
   455  049B                     	;# 
   456  049C                     	;# 
   457  049D                     	;# 
   458  049E                     	;# 
   459  049F                     	;# 
   460  0617                     	;# 
   461  0618                     	;# 
   462  0619                     	;# 
   463  0619                     	;# 
   464  061A                     	;# 
   465  061B                     	;# 
   466  061C                     	;# 
   467  061C                     	;# 
   468  0691                     	;# 
   469  0692                     	;# 
   470  0693                     	;# 
   471  0694                     	;# 
   472  0695                     	;# 
   473  0696                     	;# 
   474  0697                     	;# 
   475  0698                     	;# 
   476  0699                     	;# 
   477  0891                     	;# 
   478  0891                     	;# 
   479  0891                     	;# 
   480  0891                     	;# 
   481  0891                     	;# 
   482  0891                     	;# 
   483  0892                     	;# 
   484  0892                     	;# 
   485  0892                     	;# 
   486  0893                     	;# 
   487  0893                     	;# 
   488  0893                     	;# 
   489  0893                     	;# 
   490  0893                     	;# 
   491  0893                     	;# 
   492  0894                     	;# 
   493  0894                     	;# 
   494  0894                     	;# 
   495  0895                     	;# 
   496  0895                     	;# 
   497  0895                     	;# 
   498  0896                     	;# 
   499  0896                     	;# 
   500  0896                     	;# 
   501  089B                     	;# 
   502  0911                     	;# 
   503  0912                     	;# 
   504  0913                     	;# 
   505  0914                     	;# 
   506  0915                     	;# 
   507  0916                     	;# 
   508  0918                     	;# 
   509  0919                     	;# 
   510  091A                     	;# 
   511  091B                     	;# 
   512  091C                     	;# 
   513  091D                     	;# 
   514  091E                     	;# 
   515  091F                     	;# 
   516  0E0F                     	;# 
   517  0E10                     	;# 
   518  0E11                     	;# 
   519  0E12                     	;# 
   520  0E13                     	;# 
   521  0E14                     	;# 
   522  0E15                     	;# 
   523  0E18                     	;# 
   524  0E1A                     	;# 
   525  0E1B                     	;# 
   526  0E1C                     	;# 
   527  0E20                     	;# 
   528  0E21                     	;# 
   529  0E22                     	;# 
   530  0E24                     	;# 
   531  0E25                     	;# 
   532  0E28                     	;# 
   533  0E29                     	;# 
   534  0E2A                     	;# 
   535  0E2B                     	;# 
   536  0E90                     	;# 
   537  0E91                     	;# 
   538  0E92                     	;# 
   539  0E94                     	;# 
   540  0E95                     	;# 
   541  0EA0                     	;# 
   542  0EA1                     	;# 
   543  0EA2                     	;# 
   544  0EA3                     	;# 
   545  0EA4                     	;# 
   546  0EA5                     	;# 
   547  0F0F                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579                           
   580                           	psect	nvBANK0
   581  0050                     __pnvBANK0:	
   582  0050                     _reg:	
   583  0050                     	ds	2
   584  0052                     _sendbit:	
   585  0052                     	ds	1
   586  000B                     _INTCONbits	set	11
   587  0017                     _T0CON0bits	set	23
   588  0016                     _TMR0H	set	22
   589  0010                     _PIR0bits	set	16
   590  0018                     _T0CON1bits	set	24
   591  0085                     _TMR0IF	set	133
   592  008E                     _TRISCbits	set	142
   593  0090                     _PIE0bits	set	144
   594  010E                     _LATCbits	set	270
   595  018E                     _ANSELCbits	set	398
   596                           
   597                           ; #config settings
   598  0000                     
   599                           	psect	cinit
   600  0013                     start_initialization:	
   601  0013                     __initialization:	
   602                           
   603                           ; Clear objects allocated to COMMON
   604  0013  01FA               	clrf	__pbssCOMMON& (0+127)
   605  0014  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   606  0015  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK0
   609  0016  0020               	movlb	0	; select bank0
   610  0017  01CB               	clrf	__pbssBANK0& (0+127)
   611  0018  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   612  0019  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   613  001A  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   614  001B  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   615                           
   616                           ; Clear objects allocated to BANK1
   617  001C  30A0               	movlw	low __pbssBANK1
   618  001D  0084               	movwf	4
   619  001E  3000               	movlw	high __pbssBANK1
   620  001F  0085               	movwf	5
   621  0020  3028               	movlw	40
   622  0021  3181  21E4  3180   	fcall	clear_ram0
   623  0024                     end_of_initialization:	
   624                           ;End of C runtime variable initialization code
   625                           
   626  0024                     __end_of__initialization:	
   627  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   628  0025  0020               	movlb	0
   629  0026  28FD               	ljmp	_main	;jump to C main() function
   630                           
   631                           	psect	bssCOMMON
   632  007A                     __pbssCOMMON:	
   633  007A                     _endsend:	
   634  007A                     	ds	1
   635  007B                     _i:	
   636  007B                     	ds	1
   637  007C                     _n:	
   638  007C                     	ds	1
   639                           
   640                           	psect	bssBANK0
   641  004B                     __pbssBANK0:	
   642  004B                     _data:	
   643  004B                     	ds	1
   644  004C                     _count:	
   645  004C                     	ds	1
   646  004D                     _CLK_count:	
   647  004D                     	ds	1
   648  004E                     _CLKOK:	
   649  004E                     	ds	1
   650  004F                     _clk_control:	
   651  004F                     	ds	1
   652                           
   653                           	psect	bssBANK1
   654  00A0                     __pbssBANK1:	
   655  00A0                     sentdata@F4814:	
   656  00A0                     	ds	40
   657                           
   658                           	psect	clrtext
   659  01E4                     clear_ram0:	
   660                           ;	Called with FSR0 containing the base address, and
   661                           ;	WREG with the size to clear
   662                           
   663  01E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   664  01E5                     clrloop0:	
   665  01E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   666  01E6  3101               	addfsr 0,1
   667  01E7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   668  01E8  29E5               	goto	clrloop0	;have we reached the end yet?
   669  01E9  3400               	retlw	0	;all done for this memory range, return
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:	
   673  0070                     ?_system_enable:	
   674  0070                     ?_LCD_BIAS_DUTY_1_2_4COM:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_Clear_Ram_data:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_LCD_ON:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_IO_inital:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_Timer0_Init:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_CLK:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_CLK:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_ISR:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_LCM_init:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_main:	
   702                           ; 1 bytes @ 0x0
   703                           
   704                           
   705                           ; 1 bytes @ 0x0
   706  0070                     	ds	1
   707  0071                     ??_IO_inital:	
   708  0071                     ??_Timer0_Init:	
   709                           ; 1 bytes @ 0x1
   710                           
   711  0071                     ?_sentdata:	
   712                           ; 1 bytes @ 0x1
   713                           
   714  0071                     ??_ISR:	
   715                           ; 1 bytes @ 0x1
   716                           
   717  0071                     sentdata@Ram_address:	
   718                           ; 1 bytes @ 0x1
   719                           
   720                           
   721                           ; 2 bytes @ 0x1
   722  0071                     	ds	2
   723  0073                     sentdata@Ram_data:	
   724                           
   725                           ; 1 bytes @ 0x3
   726  0073                     	ds	1
   727  0074                     sentdata@bit:	
   728                           
   729                           ; 1 bytes @ 0x4
   730  0074                     	ds	1
   731  0075                     ??_sentdata:	
   732                           
   733                           ; 1 bytes @ 0x5
   734  0075                     	ds	3
   735  0078                     ??_system_enable:	
   736  0078                     ??_LCD_BIAS_DUTY_1_2_4COM:	
   737                           ; 1 bytes @ 0x8
   738                           
   739  0078                     ??_Clear_Ram_data:	
   740                           ; 1 bytes @ 0x8
   741                           
   742  0078                     ??_LCD_ON:	
   743                           ; 1 bytes @ 0x8
   744                           
   745                           
   746                           ; 1 bytes @ 0x8
   747  0078                     	ds	2
   748  007A                     ??_LCM_init:	
   749                           
   750                           	psect	cstackBANK0
   751  0020                     __pcstackBANK0:	
   752                           ; 1 bytes @ 0xA
   753                           
   754  0020                     sentdata@databuff:	
   755                           
   756                           ; 40 bytes @ 0x0
   757  0020                     	ds	40
   758  0048                     sentdata@slave_address:	
   759                           
   760                           ; 1 bytes @ 0x28
   761  0048                     	ds	1
   762  0049                     sentdata@slave_length:	
   763                           
   764                           ; 1 bytes @ 0x29
   765  0049                     	ds	1
   766  004A                     ??_main:	
   767                           
   768                           ; 1 bytes @ 0x2A
   769  004A                     	ds	1
   770                           
   771                           	psect	maintext
   772  00FD                     __pmaintext:	
   773 ;;
   774 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   775 ;;
   776 ;; *************** function _main *****************
   777 ;; Defined at:
   778 ;;		line 65 in file "LCM_SPI_senddataversion2.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : B1F/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   792 ;;      Params:         0       0       0       0
   793 ;;      Locals:         0       0       0       0
   794 ;;      Temps:          0       1       0       0
   795 ;;      Totals:         0       1       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels required when called:    5
   798 ;; This function calls:
   799 ;;		_IO_inital
   800 ;;		_LCM_init
   801 ;;		_Timer0_Init
   802 ;;		_sentdata
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _main
   810  00FD                     _main:	
   811  00FD                     l1078:	
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;LCM_SPI_senddataversion2.c: 68:   IO_inital();
   817  00FD  3181  21B2  3180   	fcall	_IO_inital
   818  0100                     l1080:	
   819                           
   820                           ;LCM_SPI_senddataversion2.c: 70:   clk_control=0;
   821  0100  0020               	movlb	0	; select bank0
   822  0101  01CF               	clrf	_clk_control
   823  0102                     l1082:	
   824                           
   825                           ;LCM_SPI_senddataversion2.c: 71:   Timer0_Init();
   826  0102  3181  21C5  3180   	fcall	_Timer0_Init
   827  0105                     l1084:	
   828                           
   829                           ;LCM_SPI_senddataversion2.c: 72:   INTCONbits.GIE=1;
   830  0105  178B               	bsf	11,7	;volatile
   831  0106                     l1086:	
   832                           
   833                           ;LCM_SPI_senddataversion2.c: 74:   LCM_init();
   834  0106  3181  21D7  3180   	fcall	_LCM_init
   835  0109                     l1088:	
   836                           
   837                           ;LCM_SPI_senddataversion2.c: 78:      LATCbits.LATC3=0;
   838  0109  0022               	movlb	2	; select bank2
   839  010A  118E               	bcf	14,3	;volatile
   840  010B                     l1090:	
   841                           
   842                           ;LCM_SPI_senddataversion2.c: 79:      sentdata(0x05,0x00,0x0,10);
   843  010B  3000               	movlw	0
   844  010C  00F1               	movwf	sentdata@Ram_address
   845  010D  00F2               	movwf	sentdata@Ram_address+1
   846  010E  01F3               	clrf	sentdata@Ram_data
   847  010F  300A               	movlw	10
   848  0110  0020               	movlb	0	; select bank0
   849  0111  00CA               	movwf	??_main
   850  0112  084A               	movf	??_main,w
   851  0113  00F4               	movwf	sentdata@bit
   852  0114  3005               	movlw	5
   853  0115  3180  2027  3180   	fcall	_sentdata
   854  0118                     l1092:	
   855                           
   856                           ;LCM_SPI_senddataversion2.c: 80:      LATCbits.LATC3=1;
   857  0118  0022               	movlb	2	; select bank2
   858  0119  158E               	bsf	14,3	;volatile
   859  011A                     l1094:	
   860                           
   861                           ;LCM_SPI_senddataversion2.c: 81:      _delay((unsigned long)((1)*(32000000/4000.0)));
   862  011A  300B               	movlw	11
   863  011B  0020               	movlb	0	; select bank0
   864  011C  00CA               	movwf	??_main
   865  011D  3062               	movlw	98
   866  011E                     u337:	
   867  011E  0B89               	decfsz	9,f
   868  011F  291E               	goto	u337
   869  0120  0BCA               	decfsz	??_main,f
   870  0121  291E               	goto	u337
   871  0122  0000               	nop
   872  0123  2909               	goto	l1088
   873  0124  2812               	ljmp	start
   874  0125                     __end_of_main:	
   875                           
   876                           	psect	text1
   877  01C5                     __ptext1:	
   878 ;; *************** function _Timer0_Init *****************
   879 ;; Defined at:
   880 ;;		line 22 in file "./LCM_sent_double_data.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   894 ;;      Params:         0       0       0       0
   895 ;;      Locals:         0       0       0       0
   896 ;;      Temps:          0       0       0       0
   897 ;;      Totals:         0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _Timer0_Init
   910  01C5                     _Timer0_Init:	
   911  01C5                     l1014:	
   912                           ;incstack = 0
   913                           ; Regs used in _Timer0_Init: [wreg+status,2+status,0]
   914                           
   915                           
   916                           ;./LCM_sent_double_data.c: 24:     T0CON1bits.T0CS = 2;
   917  01C5  0020               	movlb	0	; select bank0
   918  01C6  0818               	movf	24,w	;volatile
   919  01C7  391F               	andlw	-225
   920  01C8  3840               	iorlw	64
   921  01C9  0098               	movwf	24	;volatile
   922                           
   923                           ;./LCM_sent_double_data.c: 25:     T0CON1bits.T0CKPS =3;
   924  01CA  0818               	movf	24,w	;volatile
   925  01CB  39F0               	andlw	-16
   926  01CC  3803               	iorlw	3
   927  01CD  0098               	movwf	24	;volatile
   928  01CE                     l1016:	
   929                           
   930                           ;./LCM_sent_double_data.c: 27:     T0CON1bits.T0ASYNC = 1;
   931  01CE  1618               	bsf	24,4	;volatile
   932  01CF                     l1018:	
   933                           
   934                           ;./LCM_sent_double_data.c: 28:     PIR0bits.TMR0IF=0;
   935  01CF  1290               	bcf	16,5	;volatile
   936  01D0                     l1020:	
   937                           
   938                           ;./LCM_sent_double_data.c: 29:     PIE0bits.TMR0IE=1;
   939  01D0  0021               	movlb	1	; select bank1
   940  01D1  1690               	bsf	16,5	;volatile
   941  01D2                     l1022:	
   942                           
   943                           ;./LCM_sent_double_data.c: 30:     TMR0H=100;
   944  01D2  3064               	movlw	100
   945  01D3  0020               	movlb	0	; select bank0
   946  01D4  0096               	movwf	22	;volatile
   947  01D5                     l1024:	
   948                           
   949                           ;./LCM_sent_double_data.c: 31:     T0CON0bits.T0EN=1;
   950  01D5  1797               	bsf	23,7	;volatile
   951  01D6                     l61:	
   952  01D6  0008               	return
   953  01D7                     __end_of_Timer0_Init:	
   954                           
   955                           	psect	text2
   956  01D7                     __ptext2:	
   957 ;; *************** function _LCM_init *****************
   958 ;; Defined at:
   959 ;;		line 36 in file "LCM_SPI_senddataversion2.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   973 ;;      Params:         0       0       0       0
   974 ;;      Locals:         0       0       0       0
   975 ;;      Temps:          0       0       0       0
   976 ;;      Totals:         0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    4
   980 ;; This function calls:
   981 ;;		_Clear_Ram_data
   982 ;;		_LCD_BIAS_DUTY_1_2_4COM
   983 ;;		_LCD_ON
   984 ;;		_system_enable
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _LCM_init
   992  01D7                     _LCM_init:	
   993  01D7                     l1028:	
   994                           ;incstack = 0
   995                           ; Regs used in _LCM_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   996                           
   997                           
   998                           ;LCM_SPI_senddataversion2.c: 48:   system_enable();
   999  01D7  3181  2147  3181   	fcall	_system_enable
  1000                           
  1001                           ;LCM_SPI_senddataversion2.c: 51:   LCD_BIAS_DUTY_1_2_4COM();
  1002  01DA  3181  217F  3181   	fcall	_LCD_BIAS_DUTY_1_2_4COM
  1003                           
  1004                           ;LCM_SPI_senddataversion2.c: 54:   Clear_Ram_data();
  1005  01DD  3181  2199  3181   	fcall	_Clear_Ram_data
  1006                           
  1007                           ;LCM_SPI_senddataversion2.c: 60:   LCD_ON();
  1008  01E0  3181  2163  3181   	fcall	_LCD_ON
  1009  01E3                     l124:	
  1010  01E3  0008               	return
  1011  01E4                     __end_of_LCM_init:	
  1012                           
  1013                           	psect	text3
  1014  0147                     __ptext3:	
  1015 ;; *************** function _system_enable *****************
  1016 ;; Defined at:
  1017 ;;		line 130 in file "./LCM_sent_double_data.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1031 ;;      Params:         0       0       0       0
  1032 ;;      Locals:         0       0       0       0
  1033 ;;      Temps:          2       0       0       0
  1034 ;;      Totals:         2       0       0       0
  1035 ;;Total ram usage:        2 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    3
  1038 ;; This function calls:
  1039 ;;		_sentdata
  1040 ;; This function is called by:
  1041 ;;		_LCM_init
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _system_enable
  1047  0147                     _system_enable:	
  1048  0147                     l976:	
  1049                           ;incstack = 0
  1050                           ; Regs used in _system_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1051                           
  1052                           
  1053                           ;./LCM_sent_double_data.c: 132: LATCbits.LATC3=0;
  1054  0147  0022               	movlb	2	; select bank2
  1055  0148  118E               	bcf	14,3	;volatile
  1056  0149                     l978:	
  1057                           
  1058                           ;./LCM_sent_double_data.c: 133: sentdata(0x04,0x00,0x02,9);
  1059  0149  3000               	movlw	0
  1060  014A  00F1               	movwf	sentdata@Ram_address
  1061  014B  00F2               	movwf	sentdata@Ram_address+1
  1062  014C  3002               	movlw	2
  1063  014D  00F8               	movwf	??_system_enable
  1064  014E  0878               	movf	??_system_enable,w
  1065  014F  00F3               	movwf	sentdata@Ram_data
  1066  0150  3009               	movlw	9
  1067  0151  00F9               	movwf	??_system_enable+1
  1068  0152  0879               	movf	??_system_enable+1,w
  1069  0153  00F4               	movwf	sentdata@bit
  1070  0154  3004               	movlw	4
  1071  0155  3180  2027  3181   	fcall	_sentdata
  1072  0158                     l980:	
  1073                           
  1074                           ;./LCM_sent_double_data.c: 134:  LATCbits.LATC3=1;
  1075  0158  0022               	movlb	2	; select bank2
  1076  0159  158E               	bsf	14,3	;volatile
  1077  015A                     l982:	
  1078                           
  1079                           ;./LCM_sent_double_data.c: 135: _delay((unsigned long)((1)*(32000000/4000.0)));
  1080  015A  300B               	movlw	11
  1081  015B  00F8               	movwf	??_system_enable
  1082  015C  3062               	movlw	98
  1083  015D                     u347:	
  1084  015D  0B89               	decfsz	9,f
  1085  015E  295D               	goto	u347
  1086  015F  0BF8               	decfsz	??_system_enable,f
  1087  0160  295D               	goto	u347
  1088  0161  3200               	nop2
  1089  0162                     l105:	
  1090  0162  0008               	return
  1091  0163                     __end_of_system_enable:	
  1092                           
  1093                           	psect	text4
  1094  0163                     __ptext4:	
  1095 ;; *************** function _LCD_ON *****************
  1096 ;; Defined at:
  1097 ;;		line 139 in file "./LCM_sent_double_data.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1111 ;;      Params:         0       0       0       0
  1112 ;;      Locals:         0       0       0       0
  1113 ;;      Temps:          2       0       0       0
  1114 ;;      Totals:         2       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		_sentdata
  1120 ;; This function is called by:
  1121 ;;		_LCM_init
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _LCD_ON
  1127  0163                     _LCD_ON:	
  1128  0163                     l984:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _LCD_ON: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1131                           
  1132                           
  1133                           ;./LCM_sent_double_data.c: 141: LATCbits.LATC3=0;
  1134  0163  0022               	movlb	2	; select bank2
  1135  0164  118E               	bcf	14,3	;volatile
  1136  0165                     l986:	
  1137                           
  1138                           ;./LCM_sent_double_data.c: 142: sentdata(0x04,0x00,0x06,9);
  1139  0165  3000               	movlw	0
  1140  0166  00F1               	movwf	sentdata@Ram_address
  1141  0167  00F2               	movwf	sentdata@Ram_address+1
  1142  0168  3006               	movlw	6
  1143  0169  00F8               	movwf	??_LCD_ON
  1144  016A  0878               	movf	??_LCD_ON,w
  1145  016B  00F3               	movwf	sentdata@Ram_data
  1146  016C  3009               	movlw	9
  1147  016D  00F9               	movwf	??_LCD_ON+1
  1148  016E  0879               	movf	??_LCD_ON+1,w
  1149  016F  00F4               	movwf	sentdata@bit
  1150  0170  3004               	movlw	4
  1151  0171  3180  2027  3181   	fcall	_sentdata
  1152  0174                     l988:	
  1153                           
  1154                           ;./LCM_sent_double_data.c: 143: LATCbits.LATC3=1;
  1155  0174  0022               	movlb	2	; select bank2
  1156  0175  158E               	bsf	14,3	;volatile
  1157  0176                     l990:	
  1158                           
  1159                           ;./LCM_sent_double_data.c: 144: _delay((unsigned long)((1)*(32000000/4000.0)));
  1160  0176  300B               	movlw	11
  1161  0177  00F8               	movwf	??_LCD_ON
  1162  0178  3062               	movlw	98
  1163  0179                     u357:	
  1164  0179  0B89               	decfsz	9,f
  1165  017A  2979               	goto	u357
  1166  017B  0BF8               	decfsz	??_LCD_ON,f
  1167  017C  2979               	goto	u357
  1168  017D  3200               	nop2
  1169  017E                     l108:	
  1170  017E  0008               	return
  1171  017F                     __end_of_LCD_ON:	
  1172                           
  1173                           	psect	text5
  1174  017F                     __ptext5:	
  1175 ;; *************** function _LCD_BIAS_DUTY_1_2_4COM *****************
  1176 ;; Defined at:
  1177 ;;		line 112 in file "./LCM_sent_double_data.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1191 ;;      Params:         0       0       0       0
  1192 ;;      Locals:         0       0       0       0
  1193 ;;      Temps:          1       0       0       0
  1194 ;;      Totals:         1       0       0       0
  1195 ;;Total ram usage:        1 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    3
  1198 ;; This function calls:
  1199 ;;		_sentdata
  1200 ;; This function is called by:
  1201 ;;		_LCM_init
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _LCD_BIAS_DUTY_1_2_4COM
  1207  017F                     _LCD_BIAS_DUTY_1_2_4COM:	
  1208  017F                     l968:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _LCD_BIAS_DUTY_1_2_4COM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  1211                           
  1212                           
  1213                           ;./LCM_sent_double_data.c: 114: LATCbits.LATC3=0;
  1214  017F  0022               	movlb	2	; select bank2
  1215  0180  118E               	bcf	14,3	;volatile
  1216  0181                     l970:	
  1217                           
  1218                           ;./LCM_sent_double_data.c: 115: sentdata(0x04,0x05,0x00,9);
  1219  0181  3005               	movlw	5
  1220  0182  00F1               	movwf	sentdata@Ram_address
  1221  0183  3000               	movlw	0
  1222  0184  00F2               	movwf	sentdata@Ram_address+1
  1223  0185  01F3               	clrf	sentdata@Ram_data
  1224  0186  3009               	movlw	9
  1225  0187  00F8               	movwf	??_LCD_BIAS_DUTY_1_2_4COM
  1226  0188  0878               	movf	??_LCD_BIAS_DUTY_1_2_4COM,w
  1227  0189  00F4               	movwf	sentdata@bit
  1228  018A  3004               	movlw	4
  1229  018B  3180  2027  3181   	fcall	_sentdata
  1230  018E                     l972:	
  1231                           
  1232                           ;./LCM_sent_double_data.c: 116:  LATCbits.LATC3=1;
  1233  018E  0022               	movlb	2	; select bank2
  1234  018F  158E               	bsf	14,3	;volatile
  1235  0190                     l974:	
  1236                           
  1237                           ;./LCM_sent_double_data.c: 117: _delay((unsigned long)((1)*(32000000/4000.0)));
  1238  0190  300B               	movlw	11
  1239  0191  00F8               	movwf	??_LCD_BIAS_DUTY_1_2_4COM
  1240  0192  3062               	movlw	98
  1241  0193                     u367:	
  1242  0193  0B89               	decfsz	9,f
  1243  0194  2993               	goto	u367
  1244  0195  0BF8               	decfsz	??_LCD_BIAS_DUTY_1_2_4COM,f
  1245  0196  2993               	goto	u367
  1246  0197  3200               	nop2
  1247  0198                     l99:	
  1248  0198  0008               	return
  1249  0199                     __end_of_LCD_BIAS_DUTY_1_2_4COM:	
  1250                           
  1251                           	psect	text6
  1252  0199                     __ptext6:	
  1253 ;; *************** function _Clear_Ram_data *****************
  1254 ;; Defined at:
  1255 ;;		line 148 in file "./LCM_sent_double_data.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1269 ;;      Params:         0       0       0       0
  1270 ;;      Locals:         0       0       0       0
  1271 ;;      Temps:          1       0       0       0
  1272 ;;      Totals:         1       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    3
  1276 ;; This function calls:
  1277 ;;		_sentdata
  1278 ;; This function is called by:
  1279 ;;		_LCM_init
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _Clear_Ram_data
  1285  0199                     _Clear_Ram_data:	
  1286  0199                     l992:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _Clear_Ram_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;./LCM_sent_double_data.c: 150: LATCbits.LATC3=0;
  1292  0199  0022               	movlb	2	; select bank2
  1293  019A  118E               	bcf	14,3	;volatile
  1294  019B                     l994:	
  1295                           
  1296                           ;./LCM_sent_double_data.c: 151: sentdata(0x05,0x00,0x00,9);
  1297  019B  3000               	movlw	0
  1298  019C  00F1               	movwf	sentdata@Ram_address
  1299  019D  00F2               	movwf	sentdata@Ram_address+1
  1300  019E  01F3               	clrf	sentdata@Ram_data
  1301  019F  3009               	movlw	9
  1302  01A0  00F8               	movwf	??_Clear_Ram_data
  1303  01A1  0878               	movf	??_Clear_Ram_data,w
  1304  01A2  00F4               	movwf	sentdata@bit
  1305  01A3  3005               	movlw	5
  1306  01A4  3180  2027  3181   	fcall	_sentdata
  1307  01A7                     l996:	
  1308                           
  1309                           ;./LCM_sent_double_data.c: 152: LATCbits.LATC3=1;
  1310  01A7  0022               	movlb	2	; select bank2
  1311  01A8  158E               	bsf	14,3	;volatile
  1312  01A9                     l998:	
  1313                           
  1314                           ;./LCM_sent_double_data.c: 153: _delay((unsigned long)((1)*(32000000/4000.0)));
  1315  01A9  300B               	movlw	11
  1316  01AA  00F8               	movwf	??_Clear_Ram_data
  1317  01AB  3062               	movlw	98
  1318  01AC                     u377:	
  1319  01AC  0B89               	decfsz	9,f
  1320  01AD  29AC               	goto	u377
  1321  01AE  0BF8               	decfsz	??_Clear_Ram_data,f
  1322  01AF  29AC               	goto	u377
  1323  01B0  3200               	nop2
  1324  01B1                     l111:	
  1325  01B1  0008               	return
  1326  01B2                     __end_of_Clear_Ram_data:	
  1327                           
  1328                           	psect	text7
  1329  0027                     __ptext7:	
  1330 ;; *************** function _sentdata *****************
  1331 ;; Defined at:
  1332 ;;		line 43 in file "./LCM_sent_double_data.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  slave_addres    1    wreg     unsigned char 
  1335 ;;  Ram_address     2    1[COMMON] unsigned int 
  1336 ;;  Ram_data        1    3[COMMON] unsigned char 
  1337 ;;  bit             1    4[COMMON] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  slave_addres    1   40[BANK0 ] unsigned char 
  1340 ;;  databuff       40    0[BANK0 ] unsigned char [40]
  1341 ;;  slave_length    1   41[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1351 ;;      Params:         4       0       0       0
  1352 ;;      Locals:         0      42       0       0
  1353 ;;      Temps:          3       0       0       0
  1354 ;;      Totals:         7      42       0       0
  1355 ;;Total ram usage:       49 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_LCD_BIAS_DUTY_1_2_4COM
  1362 ;;		_system_enable
  1363 ;;		_LCD_ON
  1364 ;;		_Clear_Ram_data
  1365 ;;		_main
  1366 ;;		_Clock_Source
  1367 ;;		_RC_256K
  1368 ;;		_LCD_OFF
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _sentdata
  1374  0027                     _sentdata:	
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _sentdata: [wreg+fsr1l+fsr1h+status,2+status,0]
  1378                           ;sentdata@slave_address stored from wreg
  1379  0027  0020               	movlb	0	; select bank0
  1380  0028  00C8               	movwf	sentdata@slave_address
  1381  0029                     l910:	
  1382                           
  1383                           ;./LCM_sent_double_data.c: 43: unsigned char sentdata(unsigned char slave_address,unsign
      +                          ed int Ram_address,unsigned char Ram_data,unsigned char bit);./LCM_sent_double_data.c: 4
      +                          4: {;./LCM_sent_double_data.c: 45:     unsigned char databuff[40]={0};
  1384  0029  3020               	movlw	low sentdata@databuff
  1385  002A  0086               	movwf	6
  1386  002B  3000               	movlw	high sentdata@databuff
  1387  002C  0087               	movwf	7
  1388  002D  3028               	movlw	40
  1389  002E  00F5               	movwf	??_sentdata
  1390  002F  3000               	movlw	0
  1391  0030                     u170:	
  1392  0030  001E               	movwi fsr1++
  1393  0031  0BF5               	decfsz	??_sentdata,f
  1394  0032  2830               	goto	u170
  1395  0033                     l912:	
  1396                           
  1397                           ;./LCM_sent_double_data.c: 47:     unsigned char slave_length=3;
  1398  0033  3003               	movlw	3
  1399  0034  00F5               	movwf	??_sentdata
  1400  0035  0875               	movf	??_sentdata,w
  1401  0036  00C9               	movwf	sentdata@slave_length
  1402  0037                     l914:	
  1403                           
  1404                           ;./LCM_sent_double_data.c: 49:     reg=Ram_address;
  1405  0037  0872               	movf	sentdata@Ram_address+1,w
  1406  0038  00D1               	movwf	_reg+1
  1407  0039  0871               	movf	sentdata@Ram_address,w
  1408  003A  00D0               	movwf	_reg
  1409  003B                     l916:	
  1410                           
  1411                           ;./LCM_sent_double_data.c: 50:     reg=reg<<4;
  1412  003B  0851               	movf	_reg+1,w
  1413  003C  00F6               	movwf	??_sentdata+1
  1414  003D  0850               	movf	_reg,w
  1415  003E  00F5               	movwf	??_sentdata
  1416  003F  0EF5               	swapf	??_sentdata,f
  1417  0040  0EF6               	swapf	??_sentdata+1,f
  1418  0041  30F0               	movlw	240
  1419  0042  05F6               	andwf	??_sentdata+1,f
  1420  0043  0875               	movf	??_sentdata,w
  1421  0044  390F               	andlw	15
  1422  0045  04F6               	iorwf	??_sentdata+1,f
  1423  0046  30F0               	movlw	240
  1424  0047  05F5               	andwf	??_sentdata,f
  1425  0048  0875               	movf	??_sentdata,w
  1426  0049  00D0               	movwf	_reg
  1427  004A  0876               	movf	??_sentdata+1,w
  1428  004B  00D1               	movwf	_reg+1
  1429  004C                     l918:	
  1430                           
  1431                           ;./LCM_sent_double_data.c: 51:     reg=reg|Ram_data;
  1432  004C  0850               	movf	_reg,w
  1433  004D  0473               	iorwf	sentdata@Ram_data,w
  1434  004E  00D0               	movwf	_reg
  1435  004F  0851               	movf	_reg+1,w
  1436  0050  00D1               	movwf	_reg+1
  1437  0051                     l920:	
  1438                           
  1439                           ;./LCM_sent_double_data.c: 53:     sendbit=bit+slave_length;
  1440  0051  0874               	movf	sentdata@bit,w
  1441  0052  3E03               	addlw	3
  1442  0053  00F5               	movwf	??_sentdata
  1443  0054  0875               	movf	??_sentdata,w
  1444  0055  00D2               	movwf	_sendbit
  1445  0056                     l922:	
  1446                           
  1447                           ;./LCM_sent_double_data.c: 55:     for (n = 0; n< slave_length; n++)
  1448  0056  01FC               	clrf	_n
  1449  0057  286F               	goto	l928
  1450  0058                     l924:	
  1451                           
  1452                           ;./LCM_sent_double_data.c: 56:     {;./LCM_sent_double_data.c: 57:         databuff[n] =
      +                           ((slave_address >> (slave_length-n-1)) & 0x01);
  1453  0058  0848               	movf	sentdata@slave_address,w
  1454  0059  00F5               	movwf	??_sentdata
  1455  005A  087C               	movf	_n,w
  1456  005B  0249               	subwf	sentdata@slave_length,w
  1457  005C  3EFF               	addlw	-1
  1458  005D  0A89               	incf	9,f
  1459  005E  2860               	goto	u184
  1460  005F                     u185:	
  1461  005F  36F5               	lsrf	??_sentdata,f
  1462  0060                     u184:	
  1463  0060  0B89               	decfsz	9,f
  1464  0061  285F               	goto	u185
  1465  0062  0875               	movf	??_sentdata,w
  1466  0063  3901               	andlw	1
  1467  0064  00F6               	movwf	??_sentdata+1
  1468  0065  087C               	movf	_n,w
  1469  0066  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1470  0067  0086               	movwf	6
  1471  0068  0187               	clrf	7
  1472  0069  0876               	movf	??_sentdata+1,w
  1473  006A  0081               	movwf	1
  1474  006B                     l926:	
  1475                           
  1476                           ;./LCM_sent_double_data.c: 58:     }
  1477  006B  3001               	movlw	1
  1478  006C  00F5               	movwf	??_sentdata
  1479  006D  0875               	movf	??_sentdata,w
  1480  006E  07FC               	addwf	_n,f
  1481  006F                     l928:	
  1482  006F  0849               	movf	sentdata@slave_length,w
  1483  0070  027C               	subwf	_n,w
  1484  0071  1C03               	skipc
  1485  0072  2874               	goto	u191
  1486  0073  2875               	goto	u190
  1487  0074                     u191:	
  1488  0074  2858               	goto	l924
  1489  0075                     u190:	
  1490  0075                     l930:	
  1491                           
  1492                           ;./LCM_sent_double_data.c: 60:     for ( n = slave_length; n < slave_length+bit; n++)
  1493  0075  0849               	movf	sentdata@slave_length,w
  1494  0076  00F5               	movwf	??_sentdata
  1495  0077  0875               	movf	??_sentdata,w
  1496  0078  00FC               	movwf	_n
  1497  0079  2896               	goto	l936
  1498  007A                     l932:	
  1499                           
  1500                           ;./LCM_sent_double_data.c: 61:     {;./LCM_sent_double_data.c: 62:         databuff[n] =
      +                           ((reg >> (bit-(n-slave_length)-1)) & 0x01);
  1501  007A  0020               	movlb	0	; select bank0
  1502  007B  0851               	movf	_reg+1,w
  1503  007C  00F6               	movwf	??_sentdata+1
  1504  007D  0850               	movf	_reg,w
  1505  007E  00F5               	movwf	??_sentdata
  1506  007F  087C               	movf	_n,w
  1507  0080  0274               	subwf	sentdata@bit,w
  1508  0081  0749               	addwf	sentdata@slave_length,w
  1509  0082  3EFF               	addlw	-1
  1510  0083  0A89               	incf	9,f
  1511  0084  2887               	goto	u204
  1512  0085                     u205:	
  1513  0085  36F6               	lsrf	??_sentdata+1,f
  1514  0086  0CF5               	rrf	??_sentdata,f
  1515  0087                     u204:	
  1516  0087  0B89               	decfsz	9,f
  1517  0088  2885               	goto	u205
  1518  0089  0875               	movf	??_sentdata,w
  1519  008A  3901               	andlw	1
  1520  008B  00F7               	movwf	??_sentdata+2
  1521  008C  087C               	movf	_n,w
  1522  008D  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1523  008E  0086               	movwf	6
  1524  008F  0187               	clrf	7
  1525  0090  0877               	movf	??_sentdata+2,w
  1526  0091  0081               	movwf	1
  1527  0092                     l934:	
  1528                           
  1529                           ;./LCM_sent_double_data.c: 63:     }
  1530  0092  3001               	movlw	1
  1531  0093  00F5               	movwf	??_sentdata
  1532  0094  0875               	movf	??_sentdata,w
  1533  0095  07FC               	addwf	_n,f
  1534  0096                     l936:	
  1535  0096  0849               	movf	sentdata@slave_length,w
  1536  0097  0774               	addwf	sentdata@bit,w
  1537  0098  00F5               	movwf	??_sentdata
  1538  0099  01F6               	clrf	??_sentdata+1
  1539  009A  0DF6               	rlf	??_sentdata+1,f
  1540  009B  0876               	movf	??_sentdata+1,w
  1541  009C  3A80               	xorlw	128
  1542  009D  3C80               	sublw	128
  1543  009E  1D03               	skipz
  1544  009F  28A2               	goto	u215
  1545  00A0  0875               	movf	??_sentdata,w
  1546  00A1  027C               	subwf	_n,w
  1547  00A2                     u215:	
  1548  00A2  1C03               	skipc
  1549  00A3  28A5               	goto	u211
  1550  00A4  28A6               	goto	u210
  1551  00A5                     u211:	
  1552  00A5  287A               	goto	l932
  1553  00A6                     u210:	
  1554  00A6                     l77:	
  1555                           
  1556                           ;./LCM_sent_double_data.c: 65:     clk_control=1;
  1557  00A6  0020               	movlb	0	; select bank0
  1558  00A7  01CF               	clrf	_clk_control
  1559  00A8  0ACF               	incf	_clk_control,f
  1560  00A9                     l938:	
  1561                           
  1562                           ;./LCM_sent_double_data.c: 66:     endsend=0;
  1563  00A9  01FA               	clrf	_endsend
  1564                           
  1565                           ;./LCM_sent_double_data.c: 67:     while (sendbit!=0)
  1566  00AA  28F6               	goto	l966
  1567  00AB                     l940:	
  1568                           
  1569                           ;./LCM_sent_double_data.c: 70:         {;./LCM_sent_double_data.c: 71:             for(i
      +                          =0; i<= bit+slave_length; i++)
  1570  00AB  01FB               	clrf	_i
  1571  00AC  28D9               	goto	l962
  1572  00AD                     l942:	
  1573                           
  1574                           ;./LCM_sent_double_data.c: 72:             {;./LCM_sent_double_data.c: 73:              
      +                             LATCbits.LATC5=databuff[i];
  1575  00AD  087B               	movf	_i,w
  1576  00AE  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1577  00AF  0086               	movwf	6
  1578  00B0  0187               	clrf	7
  1579  00B1  0C01               	rrf	1,w
  1580  00B2  0022               	movlb	2	; select bank2
  1581  00B3  1C03               	skipc
  1582  00B4  128E               	bcf	14,5	;volatile
  1583  00B5  1803               	skipnc
  1584  00B6  168E               	bsf	14,5	;volatile
  1585  00B7                     l944:	
  1586                           
  1587                           ;./LCM_sent_double_data.c: 74:                 sendbit--;
  1588  00B7  3001               	movlw	1
  1589  00B8  0020               	movlb	0	; select bank0
  1590  00B9  02D2               	subwf	_sendbit,f
  1591  00BA                     l946:	
  1592                           
  1593                           ;./LCM_sent_double_data.c: 75:                 endsend++;
  1594  00BA  3001               	movlw	1
  1595  00BB  00F5               	movwf	??_sentdata
  1596  00BC  0875               	movf	??_sentdata,w
  1597  00BD  07FA               	addwf	_endsend,f
  1598  00BE                     l948:	
  1599                           
  1600                           ;./LCM_sent_double_data.c: 76:                 CLKOK=0;
  1601  00BE  01CE               	clrf	_CLKOK
  1602  00BF                     l950:	
  1603                           ;./LCM_sent_double_data.c: 77:                 while(!CLKOK)
  1604                           
  1605                           
  1606                           ;./LCM_sent_double_data.c: 77:                 while(!CLKOK)
  1607  00BF  084E               	movf	_CLKOK,w
  1608  00C0  1903               	btfsc	3,2
  1609  00C1  28C3               	goto	u221
  1610  00C2  28C4               	goto	u220
  1611  00C3                     u221:	
  1612  00C3  28BF               	goto	l950
  1613  00C4                     u220:	
  1614  00C4                     l952:	
  1615                           
  1616                           ;./LCM_sent_double_data.c: 81:                 if(endsend==bit+slave_length)
  1617  00C4  0874               	movf	sentdata@bit,w
  1618  00C5  0749               	addwf	sentdata@slave_length,w
  1619  00C6  00F5               	movwf	??_sentdata
  1620  00C7  01F6               	clrf	??_sentdata+1
  1621  00C8  0DF6               	rlf	??_sentdata+1,f
  1622  00C9  087A               	movf	_endsend,w
  1623  00CA  0675               	xorwf	??_sentdata,w
  1624  00CB  0476               	iorwf	??_sentdata+1,w
  1625  00CC  1D03               	skipz
  1626  00CD  28CF               	goto	u231
  1627  00CE  28D0               	goto	u230
  1628  00CF                     u231:	
  1629  00CF  28D5               	goto	l960
  1630  00D0                     u230:	
  1631  00D0                     l954:	
  1632                           
  1633                           ;./LCM_sent_double_data.c: 82:                 {;./LCM_sent_double_data.c: 83:          
      +                                     LATCbits.LATC5=0;
  1634  00D0  0022               	movlb	2	; select bank2
  1635  00D1  128E               	bcf	14,5	;volatile
  1636  00D2                     l956:	
  1637                           
  1638                           ;./LCM_sent_double_data.c: 84:                     clk_control=0;
  1639  00D2  0020               	movlb	0	; select bank0
  1640  00D3  01CF               	clrf	_clk_control
  1641  00D4  28FC               	goto	l88
  1642  00D5                     l960:	
  1643                           
  1644                           ;./LCM_sent_double_data.c: 87:             }
  1645  00D5  3001               	movlw	1
  1646  00D6  00F5               	movwf	??_sentdata
  1647  00D7  0875               	movf	??_sentdata,w
  1648  00D8  07FB               	addwf	_i,f
  1649  00D9                     l962:	
  1650  00D9  0874               	movf	sentdata@bit,w
  1651  00DA  0749               	addwf	sentdata@slave_length,w
  1652  00DB  00F5               	movwf	??_sentdata
  1653  00DC  01F6               	clrf	??_sentdata+1
  1654  00DD  0DF6               	rlf	??_sentdata+1,f
  1655  00DE  0876               	movf	??_sentdata+1,w
  1656  00DF  3A80               	xorlw	128
  1657  00E0  00F7               	movwf	??_sentdata+2
  1658  00E1  3080               	movlw	128
  1659  00E2  0277               	subwf	??_sentdata+2,w
  1660  00E3  1D03               	skipz
  1661  00E4  28E7               	goto	u245
  1662  00E5  087B               	movf	_i,w
  1663  00E6  0275               	subwf	??_sentdata,w
  1664  00E7                     u245:	
  1665  00E7  1803               	skipnc
  1666  00E8  28EA               	goto	u241
  1667  00E9  28EB               	goto	u240
  1668  00EA                     u241:	
  1669  00EA  28AD               	goto	l942
  1670  00EB                     u240:	
  1671  00EB                     l80:	
  1672                           ;./LCM_sent_double_data.c: 88:         }
  1673                           
  1674                           
  1675                           ;./LCM_sent_double_data.c: 69:         while((LATCbits.LATC4==0)&&(CLK_count))
  1676  00EB  0022               	movlb	2	; select bank2
  1677  00EC  1A0E               	btfsc	14,4	;volatile
  1678  00ED  28EF               	goto	u251
  1679  00EE  28F0               	goto	u250
  1680  00EF                     u251:	
  1681  00EF  28F6               	goto	l966
  1682  00F0                     u250:	
  1683  00F0                     l964:	
  1684  00F0  0020               	movlb	0	; select bank0
  1685  00F1  084D               	movf	_CLK_count,w
  1686  00F2  1D03               	btfss	3,2
  1687  00F3  28F5               	goto	u261
  1688  00F4  28F6               	goto	u260
  1689  00F5                     u261:	
  1690  00F5  28AB               	goto	l940
  1691  00F6                     u260:	
  1692  00F6                     l966:	
  1693                           
  1694                           ;./LCM_sent_double_data.c: 67:     while (sendbit!=0)
  1695  00F6  0020               	movlb	0	; select bank0
  1696  00F7  0852               	movf	_sendbit,w
  1697  00F8  1D03               	btfss	3,2
  1698  00F9  28FB               	goto	u271
  1699  00FA  28FC               	goto	u270
  1700  00FB                     u271:	
  1701  00FB  28EB               	goto	l80
  1702  00FC                     u270:	
  1703  00FC                     l88:	
  1704  00FC  0008               	return
  1705  00FD                     __end_of_sentdata:	
  1706                           
  1707                           	psect	text8
  1708  01B2                     __ptext8:	
  1709 ;; *************** function _IO_inital *****************
  1710 ;; Defined at:
  1711 ;;		line 96 in file "./LCM_sent_double_data.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		None
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1725 ;;      Params:         0       0       0       0
  1726 ;;      Locals:         0       0       0       0
  1727 ;;      Temps:          0       0       0       0
  1728 ;;      Totals:         0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _IO_inital
  1741  01B2                     _IO_inital:	
  1742  01B2                     l1026:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _IO_inital: []
  1745                           
  1746                           
  1747                           ;./LCM_sent_double_data.c: 99:   LATCbits.LATC3 =1;
  1748  01B2  0022               	movlb	2	; select bank2
  1749  01B3  158E               	bsf	14,3	;volatile
  1750                           
  1751                           ;./LCM_sent_double_data.c: 100:   ANSELCbits.ANSC3 =0;
  1752  01B4  0023               	movlb	3	; select bank3
  1753  01B5  118E               	bcf	14,3	;volatile
  1754                           
  1755                           ;./LCM_sent_double_data.c: 101:   TRISCbits.TRISC3 =0;
  1756  01B6  0021               	movlb	1	; select bank1
  1757  01B7  118E               	bcf	14,3	;volatile
  1758                           
  1759                           ;./LCM_sent_double_data.c: 103:   LATCbits.LATC4 =1;
  1760  01B8  0022               	movlb	2	; select bank2
  1761  01B9  160E               	bsf	14,4	;volatile
  1762                           
  1763                           ;./LCM_sent_double_data.c: 104:   ANSELCbits.ANSC4 =0;
  1764  01BA  0023               	movlb	3	; select bank3
  1765  01BB  120E               	bcf	14,4	;volatile
  1766                           
  1767                           ;./LCM_sent_double_data.c: 105:   TRISCbits.TRISC4 =0;
  1768  01BC  0021               	movlb	1	; select bank1
  1769  01BD  120E               	bcf	14,4	;volatile
  1770                           
  1771                           ;./LCM_sent_double_data.c: 107:   LATCbits.LATC5 =0;
  1772  01BE  0022               	movlb	2	; select bank2
  1773  01BF  128E               	bcf	14,5	;volatile
  1774                           
  1775                           ;./LCM_sent_double_data.c: 108:   ANSELCbits.ANSC5 =0;
  1776  01C0  0023               	movlb	3	; select bank3
  1777  01C1  128E               	bcf	14,5	;volatile
  1778                           
  1779                           ;./LCM_sent_double_data.c: 109:   TRISCbits.TRISC5 =0;
  1780  01C2  0021               	movlb	1	; select bank1
  1781  01C3  128E               	bcf	14,5	;volatile
  1782  01C4                     l96:	
  1783  01C4  0008               	return
  1784  01C5                     __end_of_IO_inital:	
  1785                           
  1786                           	psect	intentry
  1787  0004                     __pintentry:	
  1788 ;; *************** function _ISR *****************
  1789 ;; Defined at:
  1790 ;;		line 34 in file "./LCM_sent_double_data.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1804 ;;      Params:         0       0       0       0
  1805 ;;      Locals:         0       0       0       0
  1806 ;;      Temps:          0       0       0       0
  1807 ;;      Totals:         0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    1
  1811 ;; This function calls:
  1812 ;;		_CLK
  1813 ;; This function is called by:
  1814 ;;		Interrupt level 1
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818  0004                     _ISR:	
  1819                           
  1820                           ;incstack = 0
  1821  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1822                           
  1823                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1824  0005  3180               	pagesel	$
  1825  0006                     i1l1030:	
  1826                           
  1827                           ;./LCM_sent_double_data.c: 36:    if(TMR0IF==1)
  1828  0006  0020               	movlb	0	; select bank0
  1829  0007  1E90               	btfss	16,5	;volatile
  1830  0008  280A               	goto	u32_21
  1831  0009  280B               	goto	u32_20
  1832  000A                     u32_21:	
  1833  000A  2810               	goto	i1l67
  1834  000B                     u32_20:	
  1835  000B                     i1l1032:	
  1836                           
  1837                           ;./LCM_sent_double_data.c: 37:    {;./LCM_sent_double_data.c: 38:         CLK();
  1838  000B  3181  2125  3180   	fcall	_CLK
  1839  000E                     i1l1034:	
  1840                           
  1841                           ;./LCM_sent_double_data.c: 39:         TMR0IF=0;
  1842  000E  0020               	movlb	0	; select bank0
  1843  000F  1290               	bcf	16,5	;volatile
  1844  0010                     i1l67:	
  1845  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1846  0011  0009               	retfie
  1847  0012                     __end_of_ISR:	
  1848                           
  1849                           	psect	text10
  1850  0125                     __ptext10:	
  1851 ;; *************** function _CLK *****************
  1852 ;; Defined at:
  1853 ;;		line 4 in file "./LCM_sent_double_data.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1867 ;;      Params:         0       0       0       0
  1868 ;;      Locals:         0       0       0       0
  1869 ;;      Temps:          1       0       0       0
  1870 ;;      Totals:         1       0       0       0
  1871 ;;Total ram usage:        1 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_ISR
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _CLK
  1882  0125                     _CLK:	
  1883  0125                     i1l1000:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _CLK: [wreg+status,2+status,0]
  1886                           
  1887                           
  1888                           ;./LCM_sent_double_data.c: 6:     if(clk_control==1)
  1889  0125  0020               	movlb	0	; select bank0
  1890  0126  034F               	decf	_clk_control,w
  1891  0127  1D03               	btfss	3,2
  1892  0128  292A               	goto	u28_21
  1893  0129  292B               	goto	u28_20
  1894  012A                     u28_21:	
  1895  012A  2943               	goto	i1l1010
  1896  012B                     u28_20:	
  1897  012B                     i1l1002:	
  1898                           
  1899                           ;./LCM_sent_double_data.c: 7:     {;./LCM_sent_double_data.c: 8:         LATCbits.LATC4 
      +                          =! LATCbits.LATC4;
  1900  012B  1003               	clrc
  1901  012C  0022               	movlb	2	; select bank2
  1902  012D  1E0E               	btfss	14,4	;volatile
  1903  012E  1403               	setc
  1904  012F  1803               	btfsc	3,0
  1905  0130  2932               	goto	u29_21
  1906  0131  2935               	goto	u29_20
  1907  0132                     u29_21:	
  1908  0132  0022               	movlb	2	; select bank2
  1909  0133  160E               	bsf	14,4	;volatile
  1910  0134  2937               	goto	u30_24
  1911  0135                     u29_20:	
  1912  0135  0022               	movlb	2	; select bank2
  1913  0136  120E               	bcf	14,4	;volatile
  1914  0137                     u30_24:	
  1915  0137                     i1l1004:	
  1916                           
  1917                           ;./LCM_sent_double_data.c: 9:         if(!LATCbits.LATC4)
  1918  0137  1A0E               	btfsc	14,4	;volatile
  1919  0138  293A               	goto	u31_21
  1920  0139  293B               	goto	u31_20
  1921  013A                     u31_21:	
  1922  013A  2946               	goto	i1l58
  1923  013B                     u31_20:	
  1924  013B                     i1l1006:	
  1925                           
  1926                           ;./LCM_sent_double_data.c: 10:         {;./LCM_sent_double_data.c: 11:             CLKOK
      +                          =1;
  1927  013B  0020               	movlb	0	; select bank0
  1928  013C  01CE               	clrf	_CLKOK
  1929  013D  0ACE               	incf	_CLKOK,f
  1930  013E                     i1l1008:	
  1931                           
  1932                           ;./LCM_sent_double_data.c: 12:             CLK_count++;
  1933  013E  3001               	movlw	1
  1934  013F  00F0               	movwf	??_CLK
  1935  0140  0870               	movf	??_CLK,w
  1936  0141  07CD               	addwf	_CLK_count,f
  1937  0142  2946               	goto	i1l58
  1938  0143                     i1l1010:	
  1939                           
  1940                           ;./LCM_sent_double_data.c: 16:     {;./LCM_sent_double_data.c: 17:         CLK_count=0;
  1941  0143  01CD               	clrf	_CLK_count
  1942  0144                     i1l1012:	
  1943                           
  1944                           ;./LCM_sent_double_data.c: 18:         LATCbits.LATC4=1;
  1945  0144  0022               	movlb	2	; select bank2
  1946  0145  160E               	bsf	14,4	;volatile
  1947  0146                     i1l58:	
  1948  0146  0008               	return
  1949  0147                     __end_of_CLK:	
  1950  007E                     btemp	set	126	;btemp
  1951  007E                     int$flags	set	126
  1952  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     43      51
    BANK1            80      0      40
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCM_init->_LCD_ON
    _LCM_init->_system_enable
    _system_enable->_sentdata
    _LCD_ON->_sentdata
    _LCD_BIAS_DUTY_1_2_4COM->_sentdata
    _Clear_Ram_data->_sentdata

Critical Paths under _ISR in COMMON

    _ISR->_CLK

Critical Paths under _main in BANK0

    _main->_sentdata
    _system_enable->_sentdata
    _LCD_ON->_sentdata
    _LCD_BIAS_DUTY_1_2_4COM->_sentdata
    _Clear_Ram_data->_sentdata

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11245
                                             42 BANK0      1     1      0
                          _IO_inital
                           _LCM_init
                        _Timer0_Init
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCM_init                                             0     0      0    8996
                     _Clear_Ram_data
             _LCD_BIAS_DUTY_1_2_4COM
                             _LCD_ON
                      _system_enable
 ---------------------------------------------------------------------------------
 (2) _system_enable                                        2     2      0    2249
                                              8 COMMON     2     2      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (2) _LCD_ON                                               2     2      0    2249
                                              8 COMMON     2     2      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (2) _LCD_BIAS_DUTY_1_2_4COM                               1     1      0    2249
                                              8 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (2) _Clear_Ram_data                                       1     1      0    2249
                                              8 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _sentdata                                            49    45      4    2249
                                              1 COMMON     7     3      4
                                              0 BANK0     42    42      0
 ---------------------------------------------------------------------------------
 (1) _IO_inital                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
                                _CLK
 ---------------------------------------------------------------------------------
 (5) _CLK                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_inital
   _LCM_init
     _Clear_Ram_data
       _sentdata
     _LCD_BIAS_DUTY_1_2_4COM
       _sentdata
     _LCD_ON
       _sentdata
     _system_enable
       _sentdata
   _Timer0_Init
   _sentdata

 _ISR (ROOT)
   _CLK

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      33       6       63.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      28       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      68      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 09 16:03:25 2020

                              _i 007B                                _n 007C             sentdata@slave_length 0049  
                             l61 01D6                               l80 00EB                               l77 00A6  
                             l96 01C4                               l88 00FC                               l99 0198  
                            l111 01B1                              l105 0162                              l108 017E  
                            l124 01E3                              l910 0029                              l920 0051  
                            l912 0033                              l930 0075                              l922 0056  
                            l914 0037                              l940 00AB                              l932 007A  
                            l924 0058                              l916 003B                              l950 00BF  
                            l942 00AD                              l934 0092                              l926 006B  
                            l918 004C                              l960 00D5                              l952 00C4  
                            l944 00B7                              l936 0096                              l928 006F  
                            l954 00D0                              l946 00BA                              l962 00D9  
                            l938 00A9                              l970 0181                              l964 00F0  
                            l956 00D2                              l948 00BE                              l972 018E  
                            l980 0158                              l966 00F6                              l974 0190  
                            l990 0176                              l982 015A                              _CLK 0125  
                            l992 0199                              l968 017F                              l984 0163  
                            l976 0147                              l994 019B                              l986 0165  
                            l978 0149                              l996 01A7                              l988 0174  
                            l998 01A9                              u210 00A6                              u211 00A5  
                            u220 00C4                              u204 0087                              u221 00C3  
                            u205 0085                              u230 00D0                              u231 00CF  
                            u215 00A2                              u240 00EB                              u241 00EA  
                            u250 00F0                              u170 0030                              u251 00EF  
                            u260 00F6                              u261 00F5                              u245 00E7  
                            u270 00FC                              u190 0075                              u271 00FB  
                            u191 0074                              u184 0060                              u185 005F  
                            u337 011E                              u347 015D                              _ISR 0004  
                            u357 0179                              u367 0193                              u377 01AC  
                            _reg 0050                              wreg 0009                     __CFG_LVP$OFF 0000  
                           ?_CLK 0070                             ?_ISR 0070                             l1020 01D0  
                           l1022 01D2                             l1014 01C5                             l1024 01D5  
                           l1016 01CE                             l1026 01B2                             l1018 01CF  
                           l1028 01D7                             l1080 0100                             l1090 010B  
                           l1082 0102                             l1092 0118                             l1084 0105  
                           l1094 011A                             l1086 0106                             l1078 00FD  
                           l1088 0109                             i1l58 0146                             i1l67 0010  
                           _data 004B                             _main 00FD                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                ?_Clear_Ram_data 0070                             start 0012                            ??_CLK 0070  
                          ??_ISR 0071            __end_of_system_enable 0163                            ?_main 0070  
                  __CFG_WDTE$OFF 0000                 __end_of_LCM_init 01E4                            _CLKOK 004E  
                          u30_24 0137                            u31_20 013B                            u31_21 013A  
                          u32_20 000B                            u32_21 000A                            _TMR0H 0016  
                          u28_20 012B                            u28_21 012A                            u29_20 0135  
                          u29_21 0132                            _count 004C               __size_of_IO_inital 0013  
                 __CFG_BORV$HIGH 0000                            status 0003                            wtemp0 007E  
                 __CFG_MCLRE$OFF 0000                  __initialization 0013                     __end_of_main 0125  
                         ??_main 004A                           i1l1000 0125                           _LCD_ON 0163  
                         i1l1002 012B                           i1l1010 0143                           i1l1012 0144  
                         i1l1004 0137                           i1l1006 013B                           i1l1030 0006  
                         i1l1008 013E                           i1l1032 000B                           i1l1034 000E  
                         _TMR0IF 0085                    ??_Timer0_Init 0071                __end_of_IO_inital 01C5  
               __end_of_sentdata 00FD          ?_LCD_BIAS_DUTY_1_2_4COM 0070          __end_of__initialization 0024  
                      ?_LCM_init 0070                   __pcstackCOMMON 0070              __end_of_Timer0_Init 01D7  
 __end_of_LCD_BIAS_DUTY_1_2_4COM 0199                 sentdata@Ram_data 0073                 ??_Clear_Ram_data 0078  
                     __pbssBANK0 004B                       __pbssBANK1 00A0                          ?_LCD_ON 0070  
                     ??_LCM_init 007A                       __pmaintext 00FD                 sentdata@databuff 0020  
                     __pintentry 0004              sentdata@Ram_address 0071              __CFG_RSTOSC$HFINT32 0000  
                __size_of_LCD_ON 001C                      _Timer0_Init 01C5                        ?_sentdata 0071  
                        __ptext1 01C5                          __ptext2 01D7                          __ptext3 0147  
                        __ptext4 0163                          __ptext5 017F                          __ptext6 0199  
                        __ptext7 0027                          __ptext8 01B2                          _endsend 007A  
                   __size_of_CLK 0022                     __size_of_ISR 000E                          _sendbit 0052  
                      _CLK_count 004D                          clrloop0 01E5             end_of_initialization 0024  
         __size_of_system_enable 001C                      sentdata@bit 0074                       ??_sentdata 0075  
                      _IO_inital 01B2                        _TRISCbits 008E                 __CFG_FEXTOSC$OFF 0000  
                 __end_of_LCD_ON 017F                __size_of_LCM_init 000D                    _system_enable 0147  
                     ?_IO_inital 0070              start_initialization 0013                      __end_of_CLK 0147  
                    __end_of_ISR 0012                         ??_LCD_ON 0078                   ?_system_enable 0070  
                    __pbssCOMMON 007A                        ___latbits 0000                    __pcstackBANK0 0020  
                      __pnvBANK0 0050                     ?_Timer0_Init 0070                __size_of_sentdata 00D6  
                    _clk_control 004F                      ??_IO_inital 0071                         _LATCbits 010E  
                      clear_ram0 01E4                         _PIE0bits 0090                         _LCM_init 01D7  
                       _PIR0bits 0010          __size_of_Clear_Ram_data 0019                  ??_system_enable 0078  
       ??_LCD_BIAS_DUTY_1_2_4COM 0078                    sentdata@F4814 00A0                       _ANSELCbits 018E  
                     _T0CON0bits 0017                       _T0CON1bits 0018                         __ptext10 0125  
                  __size_of_main 0028                         _sentdata 0027             __size_of_Timer0_Init 0012  
                       int$flags 007E  __size_of_LCD_BIAS_DUTY_1_2_4COM 001A                       _INTCONbits 000B  
                       intlevel1 0000                   _Clear_Ram_data 0199           _LCD_BIAS_DUTY_1_2_4COM 017F  
         __end_of_Clear_Ram_data 01B2            sentdata@slave_address 0048  
