

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jun 30 20:46:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18323
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F18323 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000E                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0097                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  018C                     	;# 
   117  018E                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  028C                     	;# 
   163  028E                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0297                     	;# 
   173  0298                     	;# 
   174  030C                     	;# 
   175  030E                     	;# 
   176  038C                     	;# 
   177  038E                     	;# 
   178  0391                     	;# 
   179  0392                     	;# 
   180  0393                     	;# 
   181  0397                     	;# 
   182  0398                     	;# 
   183  0399                     	;# 
   184  039A                     	;# 
   185  039C                     	;# 
   186  039D                     	;# 
   187  039E                     	;# 
   188  039F                     	;# 
   189  0498                     	;# 
   190  0498                     	;# 
   191  0499                     	;# 
   192  049A                     	;# 
   193  049B                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  049E                     	;# 
   198  049F                     	;# 
   199  0617                     	;# 
   200  0618                     	;# 
   201  0619                     	;# 
   202  0619                     	;# 
   203  061A                     	;# 
   204  061B                     	;# 
   205  061C                     	;# 
   206  061C                     	;# 
   207  0691                     	;# 
   208  0692                     	;# 
   209  0693                     	;# 
   210  0694                     	;# 
   211  0695                     	;# 
   212  0696                     	;# 
   213  0697                     	;# 
   214  0698                     	;# 
   215  0699                     	;# 
   216  0891                     	;# 
   217  0891                     	;# 
   218  0891                     	;# 
   219  0891                     	;# 
   220  0891                     	;# 
   221  0891                     	;# 
   222  0892                     	;# 
   223  0892                     	;# 
   224  0892                     	;# 
   225  0893                     	;# 
   226  0893                     	;# 
   227  0893                     	;# 
   228  0893                     	;# 
   229  0893                     	;# 
   230  0893                     	;# 
   231  0894                     	;# 
   232  0894                     	;# 
   233  0894                     	;# 
   234  0895                     	;# 
   235  0895                     	;# 
   236  0895                     	;# 
   237  0896                     	;# 
   238  0896                     	;# 
   239  0896                     	;# 
   240  089B                     	;# 
   241  0911                     	;# 
   242  0912                     	;# 
   243  0913                     	;# 
   244  0914                     	;# 
   245  0915                     	;# 
   246  0916                     	;# 
   247  0918                     	;# 
   248  0919                     	;# 
   249  091A                     	;# 
   250  091B                     	;# 
   251  091C                     	;# 
   252  091D                     	;# 
   253  091E                     	;# 
   254  091F                     	;# 
   255  0E0F                     	;# 
   256  0E10                     	;# 
   257  0E11                     	;# 
   258  0E12                     	;# 
   259  0E13                     	;# 
   260  0E14                     	;# 
   261  0E15                     	;# 
   262  0E18                     	;# 
   263  0E1A                     	;# 
   264  0E1B                     	;# 
   265  0E1C                     	;# 
   266  0E20                     	;# 
   267  0E21                     	;# 
   268  0E22                     	;# 
   269  0E24                     	;# 
   270  0E25                     	;# 
   271  0E28                     	;# 
   272  0E29                     	;# 
   273  0E2A                     	;# 
   274  0E2B                     	;# 
   275  0E90                     	;# 
   276  0E91                     	;# 
   277  0E92                     	;# 
   278  0E94                     	;# 
   279  0E95                     	;# 
   280  0EA0                     	;# 
   281  0EA1                     	;# 
   282  0EA2                     	;# 
   283  0EA3                     	;# 
   284  0EA4                     	;# 
   285  0EA5                     	;# 
   286  0F0F                     	;# 
   287  0F10                     	;# 
   288  0F11                     	;# 
   289  0F12                     	;# 
   290  0F13                     	;# 
   291  0F14                     	;# 
   292  0F15                     	;# 
   293  0F16                     	;# 
   294  0F17                     	;# 
   295  0F18                     	;# 
   296  0F19                     	;# 
   297  0F1A                     	;# 
   298  0F1B                     	;# 
   299  0F1C                     	;# 
   300  0F1D                     	;# 
   301  0F1E                     	;# 
   302  0F1F                     	;# 
   303  0F20                     	;# 
   304  0F21                     	;# 
   305  0F22                     	;# 
   306  0F23                     	;# 
   307  0FE4                     	;# 
   308  0FE5                     	;# 
   309  0FE6                     	;# 
   310  0FE7                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEB                     	;# 
   315  0FED                     	;# 
   316  0FEE                     	;# 
   317  0FEF                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000E                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  008C                     	;# 
   352  008E                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0097                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010E                     	;# 
   367  0111                     	;# 
   368  0112                     	;# 
   369  0113                     	;# 
   370  0114                     	;# 
   371  0115                     	;# 
   372  0116                     	;# 
   373  0117                     	;# 
   374  0118                     	;# 
   375  0119                     	;# 
   376  018C                     	;# 
   377  018E                     	;# 
   378  0197                     	;# 
   379  0199                     	;# 
   380  0199                     	;# 
   381  0199                     	;# 
   382  019A                     	;# 
   383  019A                     	;# 
   384  019A                     	;# 
   385  019B                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019C                     	;# 
   393  019D                     	;# 
   394  019D                     	;# 
   395  019D                     	;# 
   396  019E                     	;# 
   397  019E                     	;# 
   398  019E                     	;# 
   399  019F                     	;# 
   400  019F                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  020C                     	;# 
   405  020E                     	;# 
   406  0211                     	;# 
   407  0211                     	;# 
   408  0212                     	;# 
   409  0212                     	;# 
   410  0213                     	;# 
   411  0213                     	;# 
   412  0214                     	;# 
   413  0214                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0216                     	;# 
   419  0216                     	;# 
   420  0217                     	;# 
   421  0217                     	;# 
   422  028C                     	;# 
   423  028E                     	;# 
   424  0291                     	;# 
   425  0291                     	;# 
   426  0292                     	;# 
   427  0293                     	;# 
   428  0294                     	;# 
   429  0295                     	;# 
   430  0295                     	;# 
   431  0296                     	;# 
   432  0297                     	;# 
   433  0298                     	;# 
   434  030C                     	;# 
   435  030E                     	;# 
   436  038C                     	;# 
   437  038E                     	;# 
   438  0391                     	;# 
   439  0392                     	;# 
   440  0393                     	;# 
   441  0397                     	;# 
   442  0398                     	;# 
   443  0399                     	;# 
   444  039A                     	;# 
   445  039C                     	;# 
   446  039D                     	;# 
   447  039E                     	;# 
   448  039F                     	;# 
   449  0498                     	;# 
   450  0498                     	;# 
   451  0499                     	;# 
   452  049A                     	;# 
   453  049B                     	;# 
   454  049B                     	;# 
   455  049C                     	;# 
   456  049D                     	;# 
   457  049E                     	;# 
   458  049F                     	;# 
   459  0617                     	;# 
   460  0618                     	;# 
   461  0619                     	;# 
   462  0619                     	;# 
   463  061A                     	;# 
   464  061B                     	;# 
   465  061C                     	;# 
   466  061C                     	;# 
   467  0691                     	;# 
   468  0692                     	;# 
   469  0693                     	;# 
   470  0694                     	;# 
   471  0695                     	;# 
   472  0696                     	;# 
   473  0697                     	;# 
   474  0698                     	;# 
   475  0699                     	;# 
   476  0891                     	;# 
   477  0891                     	;# 
   478  0891                     	;# 
   479  0891                     	;# 
   480  0891                     	;# 
   481  0891                     	;# 
   482  0892                     	;# 
   483  0892                     	;# 
   484  0892                     	;# 
   485  0893                     	;# 
   486  0893                     	;# 
   487  0893                     	;# 
   488  0893                     	;# 
   489  0893                     	;# 
   490  0893                     	;# 
   491  0894                     	;# 
   492  0894                     	;# 
   493  0894                     	;# 
   494  0895                     	;# 
   495  0895                     	;# 
   496  0895                     	;# 
   497  0896                     	;# 
   498  0896                     	;# 
   499  0896                     	;# 
   500  089B                     	;# 
   501  0911                     	;# 
   502  0912                     	;# 
   503  0913                     	;# 
   504  0914                     	;# 
   505  0915                     	;# 
   506  0916                     	;# 
   507  0918                     	;# 
   508  0919                     	;# 
   509  091A                     	;# 
   510  091B                     	;# 
   511  091C                     	;# 
   512  091D                     	;# 
   513  091E                     	;# 
   514  091F                     	;# 
   515  0E0F                     	;# 
   516  0E10                     	;# 
   517  0E11                     	;# 
   518  0E12                     	;# 
   519  0E13                     	;# 
   520  0E14                     	;# 
   521  0E15                     	;# 
   522  0E18                     	;# 
   523  0E1A                     	;# 
   524  0E1B                     	;# 
   525  0E1C                     	;# 
   526  0E20                     	;# 
   527  0E21                     	;# 
   528  0E22                     	;# 
   529  0E24                     	;# 
   530  0E25                     	;# 
   531  0E28                     	;# 
   532  0E29                     	;# 
   533  0E2A                     	;# 
   534  0E2B                     	;# 
   535  0E90                     	;# 
   536  0E91                     	;# 
   537  0E92                     	;# 
   538  0E94                     	;# 
   539  0E95                     	;# 
   540  0EA0                     	;# 
   541  0EA1                     	;# 
   542  0EA2                     	;# 
   543  0EA3                     	;# 
   544  0EA4                     	;# 
   545  0EA5                     	;# 
   546  0F0F                     	;# 
   547  0F10                     	;# 
   548  0F11                     	;# 
   549  0F12                     	;# 
   550  0F13                     	;# 
   551  0F14                     	;# 
   552  0F15                     	;# 
   553  0F16                     	;# 
   554  0F17                     	;# 
   555  0F18                     	;# 
   556  0F19                     	;# 
   557  0F1A                     	;# 
   558  0F1B                     	;# 
   559  0F1C                     	;# 
   560  0F1D                     	;# 
   561  0F1E                     	;# 
   562  0F1F                     	;# 
   563  0F20                     	;# 
   564  0F21                     	;# 
   565  0F22                     	;# 
   566  0F23                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE9                     	;# 
   573  0FEA                     	;# 
   574  0FEB                     	;# 
   575  0FED                     	;# 
   576  0FEE                     	;# 
   577  0FEF                     	;# 
   578                           
   579                           	psect	nvBANK0
   580  004B                     __pnvBANK0:	
   581  004B                     _reg:	
   582  004B                     	ds	2
   583  004D                     _sendbit:	
   584  004D                     	ds	1
   585  000B                     _INTCONbits	set	11
   586  0017                     _T0CON0bits	set	23
   587  0016                     _TMR0H	set	22
   588  0010                     _PIR0bits	set	16
   589  0018                     _T0CON1bits	set	24
   590  0085                     _TMR0IF	set	133
   591  008E                     _TRISCbits	set	142
   592  0090                     _PIE0bits	set	144
   593  010E                     _LATCbits	set	270
   594  018E                     _ANSELCbits	set	398
   595                           
   596                           ; #config settings
   597  0000                     
   598                           	psect	cinit
   599  0013                     start_initialization:	
   600  0013                     __initialization:	
   601                           
   602                           ; Clear objects allocated to COMMON
   603  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   604  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   605  0015  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   606  0016  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   607  0017  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   608                           
   609                           ; Clear objects allocated to BANK0
   610  0018  0020               	movlb	0	; select bank0
   611  0019  01CE               	clrf	__pbssBANK0& (0+127)
   612  001A  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   613  001B  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   614                           
   615                           ; Clear objects allocated to BANK1
   616  001C  30A0               	movlw	low __pbssBANK1
   617  001D  0084               	movwf	4
   618  001E  3000               	movlw	high __pbssBANK1
   619  001F  0085               	movwf	5
   620  0020  3050               	movlw	80
   621  0021  3181  21D4  3180   	fcall	clear_ram0
   622  0024                     end_of_initialization:	
   623                           ;End of C runtime variable initialization code
   624                           
   625  0024                     __end_of__initialization:	
   626  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   627  0025  0020               	movlb	0
   628  0026  28E5               	ljmp	_main	;jump to C main() function
   629                           
   630                           	psect	bssCOMMON
   631  0078                     __pbssCOMMON:	
   632  0078                     _CLKOK:	
   633  0078                     	ds	1
   634  0079                     _clk_control:	
   635  0079                     	ds	1
   636  007A                     _endsend:	
   637  007A                     	ds	1
   638  007B                     _i:	
   639  007B                     	ds	1
   640  007C                     _n:	
   641  007C                     	ds	1
   642                           
   643                           	psect	bssBANK0
   644  004E                     __pbssBANK0:	
   645  004E                     _bit:	
   646  004E                     	ds	1
   647  004F                     _CLK_count:	
   648  004F                     	ds	1
   649  0050                     _testpoint:	
   650  0050                     	ds	1
   651                           
   652                           	psect	bssBANK1
   653  00A0                     __pbssBANK1:	
   654  00A0                     sentdata@F4816:	
   655  00A0                     	ds	40
   656  00C8                     _databuff:	
   657  00C8                     	ds	40
   658                           
   659                           	psect	clrtext
   660  01D4                     clear_ram0:	
   661                           ;	Called with FSR0 containing the base address, and
   662                           ;	WREG with the size to clear
   663                           
   664  01D4  0064               	clrwdt	;clear the watchdog before getting into this loop
   665  01D5                     clrloop0:	
   666  01D5  0180               	clrf	0	;clear RAM location pointed to by FSR
   667  01D6  3101               	addfsr 0,1
   668  01D7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   669  01D8  29D5               	goto	clrloop0	;have we reached the end yet?
   670  01D9  3400               	retlw	0	;all done for this memory range, return
   671                           
   672                           	psect	cstackCOMMON
   673  0070                     __pcstackCOMMON:	
   674  0070                     ?_Timer0_Init:	
   675  0070                     ?_Clear_Ram_data:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Clock_Source:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_LCD_BIAS_DUTY:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_system_enable:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_LCD_ON:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_CLK:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_CLK:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ISR:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_main:	
   700                           ; 1 bytes @ 0x0
   701                           
   702                           
   703                           ; 1 bytes @ 0x0
   704  0070                     	ds	1
   705  0071                     ??_Timer0_Init:	
   706  0071                     ?_sentdata:	
   707                           ; 1 bytes @ 0x1
   708                           
   709  0071                     ??_ISR:	
   710                           ; 1 bytes @ 0x1
   711                           
   712  0071                     sentdata@data:	
   713                           ; 1 bytes @ 0x1
   714                           
   715                           
   716                           ; 2 bytes @ 0x1
   717  0071                     	ds	2
   718  0073                     sentdata@bit:	
   719                           
   720                           ; 1 bytes @ 0x3
   721  0073                     	ds	1
   722  0074                     ??_sentdata:	
   723                           
   724                           ; 1 bytes @ 0x4
   725  0074                     	ds	3
   726  0077                     ??_Clear_Ram_data:	
   727  0077                     ??_Clock_Source:	
   728                           ; 1 bytes @ 0x7
   729                           
   730  0077                     ??_LCD_BIAS_DUTY:	
   731                           ; 1 bytes @ 0x7
   732                           
   733  0077                     ??_system_enable:	
   734                           ; 1 bytes @ 0x7
   735                           
   736  0077                     ??_LCD_ON:	
   737                           ; 1 bytes @ 0x7
   738                           
   739                           
   740                           ; 1 bytes @ 0x7
   741  0077                     	ds	1
   742                           
   743                           	psect	cstackBANK0
   744  0020                     __pcstackBANK0:	
   745  0020                     sentdata@databuff:	
   746                           
   747                           ; 40 bytes @ 0x0
   748  0020                     	ds	40
   749  0048                     sentdata@slave_address:	
   750                           
   751                           ; 1 bytes @ 0x28
   752  0048                     	ds	1
   753  0049                     sentdata@slave_length:	
   754                           
   755                           ; 1 bytes @ 0x29
   756  0049                     	ds	1
   757  004A                     ??_main:	
   758                           
   759                           ; 1 bytes @ 0x2A
   760  004A                     	ds	1
   761                           
   762                           	psect	maintext
   763  00E5                     __pmaintext:	
   764 ;;
   765 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   766 ;;
   767 ;; *************** function _main *****************
   768 ;; Defined at:
   769 ;;		line 28 in file "I2C_SPI_LCM.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : B1F/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   783 ;;      Params:         0       0       0       0
   784 ;;      Locals:         0       0       0       0
   785 ;;      Temps:          0       1       0       0
   786 ;;      Totals:         0       1       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels required when called:    4
   789 ;; This function calls:
   790 ;;		_Clear_Ram_data
   791 ;;		_Clock_Source
   792 ;;		_LCD_BIAS_DUTY
   793 ;;		_LCD_ON
   794 ;;		_Timer0_Init
   795 ;;		_sentdata
   796 ;;		_system_enable
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _main
   804  00E5                     _main:	
   805  00E5                     l1024:	
   806                           ;incstack = 0
   807                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   808                           
   809                           
   810                           ;I2C_SPI_LCM.c: 32: 
   811  00E5  0022               	movlb	2	; select bank2
   812  00E6  158E               	bsf	14,3	;volatile
   813                           
   814                           ;I2C_SPI_LCM.c: 33: 
   815  00E7  0023               	movlb	3	; select bank3
   816  00E8  118E               	bcf	14,3	;volatile
   817                           
   818                           ;I2C_SPI_LCM.c: 34: 
   819  00E9  0021               	movlb	1	; select bank1
   820  00EA  118E               	bcf	14,3	;volatile
   821                           
   822                           ;I2C_SPI_LCM.c: 36: 
   823  00EB  0022               	movlb	2	; select bank2
   824  00EC  120E               	bcf	14,4	;volatile
   825                           
   826                           ;I2C_SPI_LCM.c: 37: Clock_Source();
   827  00ED  0023               	movlb	3	; select bank3
   828  00EE  120E               	bcf	14,4	;volatile
   829                           
   830                           ;I2C_SPI_LCM.c: 38: 
   831  00EF  0021               	movlb	1	; select bank1
   832  00F0  120E               	bcf	14,4	;volatile
   833                           
   834                           ;I2C_SPI_LCM.c: 40: 
   835  00F1  0022               	movlb	2	; select bank2
   836  00F2  128E               	bcf	14,5	;volatile
   837                           
   838                           ;I2C_SPI_LCM.c: 41: system_enable();
   839  00F3  0023               	movlb	3	; select bank3
   840  00F4  128E               	bcf	14,5	;volatile
   841                           
   842                           ;I2C_SPI_LCM.c: 42: 
   843  00F5  0021               	movlb	1	; select bank1
   844  00F6  128E               	bcf	14,5	;volatile
   845  00F7                     l1026:	
   846                           
   847                           ;I2C_SPI_LCM.c: 44: 
   848  00F7  01F9               	clrf	_clk_control
   849  00F8                     l1028:	
   850                           
   851                           ;I2C_SPI_LCM.c: 45: 
   852  00F8  3181  21C2  3180   	fcall	_Timer0_Init
   853  00FB                     l1030:	
   854                           
   855                           ;I2C_SPI_LCM.c: 46: 
   856  00FB  178B               	bsf	11,7	;volatile
   857  00FC                     l1032:	
   858                           
   859                           ;I2C_SPI_LCM.c: 50: 
   860  00FC  3181  21AD  3180   	fcall	_Clear_Ram_data
   861  00FF                     l1034:	
   862                           
   863                           ;I2C_SPI_LCM.c: 52:         LATCbits.LATC3=0;
   864  00FF  3181  2194  3180   	fcall	_Clock_Source
   865  0102                     l1036:	
   866                           
   867                           ;I2C_SPI_LCM.c: 54:         LATCbits.LATC3=1;
   868  0102  3181  217B  3180   	fcall	_LCD_BIAS_DUTY
   869  0105                     l1038:	
   870                           
   871                           ;I2C_SPI_LCM.c: 56: 
   872  0105  3181  2149  3180   	fcall	_system_enable
   873  0108                     l1040:	
   874                           
   875                           ;I2C_SPI_LCM.c: 58: }
   876  0108  3181  2162  3180   	fcall	_LCD_ON
   877  010B                     l1042:	
   878  010B  0022               	movlb	2	; select bank2
   879  010C  118E               	bcf	14,3	;volatile
   880  010D                     l1044:	
   881  010D  30FF               	movlw	255
   882  010E  00F1               	movwf	sentdata@data
   883  010F  3002               	movlw	2
   884  0110  00F2               	movwf	sentdata@data+1
   885  0111  300A               	movlw	10
   886  0112  0020               	movlb	0	; select bank0
   887  0113  00CA               	movwf	??_main
   888  0114  084A               	movf	??_main,w
   889  0115  00F3               	movwf	sentdata@bit
   890  0116  3005               	movlw	5
   891  0117  3180  2027  3180   	fcall	_sentdata
   892  011A                     l1046:	
   893  011A  0022               	movlb	2	; select bank2
   894  011B  158E               	bsf	14,3	;volatile
   895  011C                     l1048:	
   896  011C  300B               	movlw	11
   897  011D  0020               	movlb	0	; select bank0
   898  011E  00CA               	movwf	??_main
   899  011F  3062               	movlw	98
   900  0120                     u337:	
   901  0120  0B89               	decfsz	9,f
   902  0121  2920               	goto	u337
   903  0122  0BCA               	decfsz	??_main,f
   904  0123  2920               	goto	u337
   905  0124  0000               	nop
   906  0125  290B               	goto	l1042
   907  0126  2812               	ljmp	start
   908  0127                     __end_of_main:	
   909                           
   910                           	psect	text1
   911  0149                     __ptext1:	
   912 ;; *************** function _system_enable *****************
   913 ;; Defined at:
   914 ;;		line 118 in file "./LCM_sent_double_data.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   928 ;;      Params:         0       0       0       0
   929 ;;      Locals:         0       0       0       0
   930 ;;      Temps:          1       0       0       0
   931 ;;      Totals:         1       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    3
   935 ;; This function calls:
   936 ;;		_sentdata
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _system_enable
   944  0149                     _system_enable:	
   945  0149                     l968:	
   946                           ;incstack = 0
   947                           ; Regs used in _system_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   948                           
   949                           
   950                           ;./LCM_sent_double_data.c: 120: LATCbits.LATC3=0;
   951  0149  0022               	movlb	2	; select bank2
   952  014A  118E               	bcf	14,3	;volatile
   953  014B                     l970:	
   954                           
   955                           ;./LCM_sent_double_data.c: 121: sentdata(0x04,0x02,9);
   956  014B  3002               	movlw	2
   957  014C  00F1               	movwf	sentdata@data
   958  014D  3000               	movlw	0
   959  014E  00F2               	movwf	sentdata@data+1
   960  014F  3009               	movlw	9
   961  0150  00F7               	movwf	??_system_enable
   962  0151  0877               	movf	??_system_enable,w
   963  0152  00F3               	movwf	sentdata@bit
   964  0153  3004               	movlw	4
   965  0154  3180  2027  3181   	fcall	_sentdata
   966  0157                     l972:	
   967                           
   968                           ;./LCM_sent_double_data.c: 122:  LATCbits.LATC3=1;
   969  0157  0022               	movlb	2	; select bank2
   970  0158  158E               	bsf	14,3	;volatile
   971  0159                     l974:	
   972                           
   973                           ;./LCM_sent_double_data.c: 123: _delay((unsigned long)((1)*(32000000/4000.0)));
   974  0159  300B               	movlw	11
   975  015A  00F7               	movwf	??_system_enable
   976  015B  3062               	movlw	98
   977  015C                     u347:	
   978  015C  0B89               	decfsz	9,f
   979  015D  295C               	goto	u347
   980  015E  0BF7               	decfsz	??_system_enable,f
   981  015F  295C               	goto	u347
   982  0160  3200               	nop2
   983  0161                     l108:	
   984  0161  0008               	return
   985  0162                     __end_of_system_enable:	
   986                           
   987                           	psect	text2
   988  01C2                     __ptext2:	
   989 ;; *************** function _Timer0_Init *****************
   990 ;; Defined at:
   991 ;;		line 22 in file "./LCM_sent_double_data.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1005 ;;      Params:         0       0       0       0
  1006 ;;      Locals:         0       0       0       0
  1007 ;;      Temps:          0       0       0       0
  1008 ;;      Totals:         0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    2
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _Timer0_Init
  1021  01C2                     _Timer0_Init:	
  1022  01C2                     l800:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _Timer0_Init: [wreg+status,2+status,0]
  1025                           
  1026                           
  1027                           ;./LCM_sent_double_data.c: 24:     T0CON1bits.T0CS = 2;
  1028  01C2  0020               	movlb	0	; select bank0
  1029  01C3  0818               	movf	24,w	;volatile
  1030  01C4  391F               	andlw	-225
  1031  01C5  3840               	iorlw	64
  1032  01C6  0098               	movwf	24	;volatile
  1033                           
  1034                           ;./LCM_sent_double_data.c: 25:     T0CON1bits.T0CKPS = 3;
  1035  01C7  0818               	movf	24,w	;volatile
  1036  01C8  39F0               	andlw	-16
  1037  01C9  3803               	iorlw	3
  1038  01CA  0098               	movwf	24	;volatile
  1039  01CB                     l802:	
  1040                           
  1041                           ;./LCM_sent_double_data.c: 27:     T0CON1bits.T0ASYNC = 1;
  1042  01CB  1618               	bsf	24,4	;volatile
  1043  01CC                     l804:	
  1044                           
  1045                           ;./LCM_sent_double_data.c: 28:     PIR0bits.TMR0IF=0;
  1046  01CC  1290               	bcf	16,5	;volatile
  1047  01CD                     l806:	
  1048                           
  1049                           ;./LCM_sent_double_data.c: 29:     PIE0bits.TMR0IE=1;
  1050  01CD  0021               	movlb	1	; select bank1
  1051  01CE  1690               	bsf	16,5	;volatile
  1052  01CF                     l808:	
  1053                           
  1054                           ;./LCM_sent_double_data.c: 30:     TMR0H=100;
  1055  01CF  3064               	movlw	100
  1056  01D0  0020               	movlb	0	; select bank0
  1057  01D1  0096               	movwf	22	;volatile
  1058  01D2                     l810:	
  1059                           
  1060                           ;./LCM_sent_double_data.c: 31:     T0CON0bits.T0EN=1;
  1061  01D2  1797               	bsf	23,7	;volatile
  1062  01D3                     l67:	
  1063  01D3  0008               	return
  1064  01D4                     __end_of_Timer0_Init:	
  1065                           
  1066                           	psect	text3
  1067  0162                     __ptext3:	
  1068 ;; *************** function _LCD_ON *****************
  1069 ;; Defined at:
  1070 ;;		line 127 in file "./LCM_sent_double_data.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1084 ;;      Params:         0       0       0       0
  1085 ;;      Locals:         0       0       0       0
  1086 ;;      Temps:          1       0       0       0
  1087 ;;      Totals:         1       0       0       0
  1088 ;;Total ram usage:        1 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    3
  1091 ;; This function calls:
  1092 ;;		_sentdata
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _LCD_ON
  1100  0162                     _LCD_ON:	
  1101  0162                     l976:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _LCD_ON: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1104                           
  1105                           
  1106                           ;./LCM_sent_double_data.c: 129: LATCbits.LATC3=0;
  1107  0162  0022               	movlb	2	; select bank2
  1108  0163  118E               	bcf	14,3	;volatile
  1109  0164                     l978:	
  1110                           
  1111                           ;./LCM_sent_double_data.c: 130: sentdata(0x04,0x06,9);
  1112  0164  3006               	movlw	6
  1113  0165  00F1               	movwf	sentdata@data
  1114  0166  3000               	movlw	0
  1115  0167  00F2               	movwf	sentdata@data+1
  1116  0168  3009               	movlw	9
  1117  0169  00F7               	movwf	??_LCD_ON
  1118  016A  0877               	movf	??_LCD_ON,w
  1119  016B  00F3               	movwf	sentdata@bit
  1120  016C  3004               	movlw	4
  1121  016D  3180  2027  3181   	fcall	_sentdata
  1122  0170                     l980:	
  1123                           
  1124                           ;./LCM_sent_double_data.c: 131: LATCbits.LATC3=1;
  1125  0170  0022               	movlb	2	; select bank2
  1126  0171  158E               	bsf	14,3	;volatile
  1127  0172                     l982:	
  1128                           
  1129                           ;./LCM_sent_double_data.c: 132: _delay((unsigned long)((1)*(32000000/4000.0)));
  1130  0172  300B               	movlw	11
  1131  0173  00F7               	movwf	??_LCD_ON
  1132  0174  3062               	movlw	98
  1133  0175                     u357:	
  1134  0175  0B89               	decfsz	9,f
  1135  0176  2975               	goto	u357
  1136  0177  0BF7               	decfsz	??_LCD_ON,f
  1137  0178  2975               	goto	u357
  1138  0179  3200               	nop2
  1139  017A                     l111:	
  1140  017A  0008               	return
  1141  017B                     __end_of_LCD_ON:	
  1142                           
  1143                           	psect	text4
  1144  017B                     __ptext4:	
  1145 ;; *************** function _LCD_BIAS_DUTY *****************
  1146 ;; Defined at:
  1147 ;;		line 100 in file "./LCM_sent_double_data.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1161 ;;      Params:         0       0       0       0
  1162 ;;      Locals:         0       0       0       0
  1163 ;;      Temps:          1       0       0       0
  1164 ;;      Totals:         1       0       0       0
  1165 ;;Total ram usage:        1 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    3
  1168 ;; This function calls:
  1169 ;;		_sentdata
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _LCD_BIAS_DUTY
  1177  017B                     _LCD_BIAS_DUTY:	
  1178  017B                     l952:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _LCD_BIAS_DUTY: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1181                           
  1182                           
  1183                           ;./LCM_sent_double_data.c: 102: LATCbits.LATC3=0;
  1184  017B  0022               	movlb	2	; select bank2
  1185  017C  118E               	bcf	14,3	;volatile
  1186  017D                     l954:	
  1187                           
  1188                           ;./LCM_sent_double_data.c: 103: sentdata(0x04,0x52,9);
  1189  017D  3052               	movlw	82
  1190  017E  00F1               	movwf	sentdata@data
  1191  017F  3000               	movlw	0
  1192  0180  00F2               	movwf	sentdata@data+1
  1193  0181  3009               	movlw	9
  1194  0182  00F7               	movwf	??_LCD_BIAS_DUTY
  1195  0183  0877               	movf	??_LCD_BIAS_DUTY,w
  1196  0184  00F3               	movwf	sentdata@bit
  1197  0185  3004               	movlw	4
  1198  0186  3180  2027  3181   	fcall	_sentdata
  1199  0189                     l956:	
  1200                           
  1201                           ;./LCM_sent_double_data.c: 104:  LATCbits.LATC3=1;
  1202  0189  0022               	movlb	2	; select bank2
  1203  018A  158E               	bsf	14,3	;volatile
  1204  018B                     l958:	
  1205                           
  1206                           ;./LCM_sent_double_data.c: 105: _delay((unsigned long)((1)*(32000000/4000.0)));
  1207  018B  300B               	movlw	11
  1208  018C  00F7               	movwf	??_LCD_BIAS_DUTY
  1209  018D  3062               	movlw	98
  1210  018E                     u367:	
  1211  018E  0B89               	decfsz	9,f
  1212  018F  298E               	goto	u367
  1213  0190  0BF7               	decfsz	??_LCD_BIAS_DUTY,f
  1214  0191  298E               	goto	u367
  1215  0192  3200               	nop2
  1216  0193                     l102:	
  1217  0193  0008               	return
  1218  0194                     __end_of_LCD_BIAS_DUTY:	
  1219                           
  1220                           	psect	text5
  1221  0194                     __ptext5:	
  1222 ;; *************** function _Clock_Source *****************
  1223 ;; Defined at:
  1224 ;;		line 109 in file "./LCM_sent_double_data.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1238 ;;      Params:         0       0       0       0
  1239 ;;      Locals:         0       0       0       0
  1240 ;;      Temps:          1       0       0       0
  1241 ;;      Totals:         1       0       0       0
  1242 ;;Total ram usage:        1 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    3
  1245 ;; This function calls:
  1246 ;;		_sentdata
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _Clock_Source
  1254  0194                     _Clock_Source:	
  1255  0194                     l960:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _Clock_Source: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1258                           
  1259                           
  1260                           ;./LCM_sent_double_data.c: 111: LATCbits.LATC3=0;
  1261  0194  0022               	movlb	2	; select bank2
  1262  0195  118E               	bcf	14,3	;volatile
  1263  0196                     l962:	
  1264                           
  1265                           ;./LCM_sent_double_data.c: 112: sentdata(0x04,0x28,9);
  1266  0196  3028               	movlw	40
  1267  0197  00F1               	movwf	sentdata@data
  1268  0198  3000               	movlw	0
  1269  0199  00F2               	movwf	sentdata@data+1
  1270  019A  3009               	movlw	9
  1271  019B  00F7               	movwf	??_Clock_Source
  1272  019C  0877               	movf	??_Clock_Source,w
  1273  019D  00F3               	movwf	sentdata@bit
  1274  019E  3004               	movlw	4
  1275  019F  3180  2027  3181   	fcall	_sentdata
  1276  01A2                     l964:	
  1277                           
  1278                           ;./LCM_sent_double_data.c: 113:  LATCbits.LATC3=1;
  1279  01A2  0022               	movlb	2	; select bank2
  1280  01A3  158E               	bsf	14,3	;volatile
  1281  01A4                     l966:	
  1282                           
  1283                           ;./LCM_sent_double_data.c: 114: _delay((unsigned long)((1)*(32000000/4000.0)));
  1284  01A4  300B               	movlw	11
  1285  01A5  00F7               	movwf	??_Clock_Source
  1286  01A6  3062               	movlw	98
  1287  01A7                     u377:	
  1288  01A7  0B89               	decfsz	9,f
  1289  01A8  29A7               	goto	u377
  1290  01A9  0BF7               	decfsz	??_Clock_Source,f
  1291  01AA  29A7               	goto	u377
  1292  01AB  3200               	nop2
  1293  01AC                     l105:	
  1294  01AC  0008               	return
  1295  01AD                     __end_of_Clock_Source:	
  1296                           
  1297                           	psect	text6
  1298  01AD                     __ptext6:	
  1299 ;; *************** function _Clear_Ram_data *****************
  1300 ;; Defined at:
  1301 ;;		line 137 in file "./LCM_sent_double_data.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       0       0       0
  1317 ;;      Temps:          1       0       0       0
  1318 ;;      Totals:         1       0       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    3
  1322 ;; This function calls:
  1323 ;;		_sentdata
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _Clear_Ram_data
  1331  01AD                     _Clear_Ram_data:	
  1332  01AD                     l984:	
  1333                           ;incstack = 0
  1334                           ; Regs used in _Clear_Ram_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1335                           
  1336                           
  1337                           ;./LCM_sent_double_data.c: 139: LATCbits.LATC3=0;
  1338  01AD  0022               	movlb	2	; select bank2
  1339  01AE  118E               	bcf	14,3	;volatile
  1340  01AF                     l986:	
  1341                           
  1342                           ;./LCM_sent_double_data.c: 140: sentdata(0x00,0x00,0);
  1343  01AF  3000               	movlw	0
  1344  01B0  00F1               	movwf	sentdata@data
  1345  01B1  00F2               	movwf	sentdata@data+1
  1346  01B2  01F3               	clrf	sentdata@bit
  1347  01B3  3000               	movlw	0
  1348  01B4  3180  2027  3181   	fcall	_sentdata
  1349  01B7                     l988:	
  1350                           
  1351                           ;./LCM_sent_double_data.c: 141: LATCbits.LATC3=1;
  1352  01B7  0022               	movlb	2	; select bank2
  1353  01B8  158E               	bsf	14,3	;volatile
  1354  01B9                     l990:	
  1355                           
  1356                           ;./LCM_sent_double_data.c: 142: _delay((unsigned long)((1)*(32000000/4000.0)));
  1357  01B9  300B               	movlw	11
  1358  01BA  00F7               	movwf	??_Clear_Ram_data
  1359  01BB  3062               	movlw	98
  1360  01BC                     u387:	
  1361  01BC  0B89               	decfsz	9,f
  1362  01BD  29BC               	goto	u387
  1363  01BE  0BF7               	decfsz	??_Clear_Ram_data,f
  1364  01BF  29BC               	goto	u387
  1365  01C0  3200               	nop2
  1366  01C1                     l114:	
  1367  01C1  0008               	return
  1368  01C2                     __end_of_Clear_Ram_data:	
  1369                           
  1370                           	psect	text7
  1371  0027                     __ptext7:	
  1372 ;; *************** function _sentdata *****************
  1373 ;; Defined at:
  1374 ;;		line 46 in file "./LCM_sent_double_data.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  slave_addres    1    wreg     unsigned char 
  1377 ;;  data            2    1[COMMON] unsigned int 
  1378 ;;  bit             1    3[COMMON] unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  slave_addres    1   40[BANK0 ] unsigned char 
  1381 ;;  databuff       40    0[BANK0 ] unsigned char [40]
  1382 ;;  slave_length    1   41[BANK0 ] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      unsigned char 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1392 ;;      Params:         3       0       0       0
  1393 ;;      Locals:         0      42       0       0
  1394 ;;      Temps:          3       0       0       0
  1395 ;;      Totals:         6      42       0       0
  1396 ;;Total ram usage:       48 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    2
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_LCD_BIAS_DUTY
  1403 ;;		_Clock_Source
  1404 ;;		_system_enable
  1405 ;;		_LCD_ON
  1406 ;;		_Clear_Ram_data
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _sentdata
  1413  0027                     _sentdata:	
  1414                           
  1415                           ;incstack = 0
  1416                           ; Regs used in _sentdata: [wreg+fsr1l+fsr1h+status,2+status,0]
  1417                           ;sentdata@slave_address stored from wreg
  1418  0027  0020               	movlb	0	; select bank0
  1419  0028  00C8               	movwf	sentdata@slave_address
  1420  0029                     l884:	
  1421                           
  1422                           ;./LCM_sent_double_data.c: 46: unsigned char sentdata(unsigned char slave_address,unsign
      +                          ed int data,unsigned char bit);./LCM_sent_double_data.c: 47: {;./LCM_sent_double_data.c:
      +                           48:     unsigned char databuff[40]={0};
  1423  0029  3020               	movlw	low sentdata@databuff
  1424  002A  0086               	movwf	6
  1425  002B  3000               	movlw	high sentdata@databuff
  1426  002C  0087               	movwf	7
  1427  002D  3028               	movlw	40
  1428  002E  00F4               	movwf	??_sentdata
  1429  002F  3000               	movlw	0
  1430  0030                     u170:	
  1431  0030  001E               	movwi fsr1++
  1432  0031  0BF4               	decfsz	??_sentdata,f
  1433  0032  2830               	goto	u170
  1434  0033                     l886:	
  1435                           
  1436                           ;./LCM_sent_double_data.c: 50:     unsigned char slave_length=3;
  1437  0033  3003               	movlw	3
  1438  0034  00F4               	movwf	??_sentdata
  1439  0035  0874               	movf	??_sentdata,w
  1440  0036  00C9               	movwf	sentdata@slave_length
  1441  0037                     l888:	
  1442                           
  1443                           ;./LCM_sent_double_data.c: 51:     reg=data;
  1444  0037  0872               	movf	sentdata@data+1,w
  1445  0038  00CC               	movwf	_reg+1
  1446  0039  0871               	movf	sentdata@data,w
  1447  003A  00CB               	movwf	_reg
  1448  003B                     l890:	
  1449                           
  1450                           ;./LCM_sent_double_data.c: 52:     sendbit=bit+slave_length;
  1451  003B  0873               	movf	sentdata@bit,w
  1452  003C  3E03               	addlw	3
  1453  003D  00F4               	movwf	??_sentdata
  1454  003E  0874               	movf	??_sentdata,w
  1455  003F  00CD               	movwf	_sendbit
  1456  0040                     l892:	
  1457                           
  1458                           ;./LCM_sent_double_data.c: 55:     for (n = 0; n< slave_length; n++)
  1459  0040  01FC               	clrf	_n
  1460  0041  2859               	goto	l898
  1461  0042                     l894:	
  1462                           
  1463                           ;./LCM_sent_double_data.c: 56:     {;./LCM_sent_double_data.c: 57:         databuff[n] =
      +                           ((slave_address >> (slave_length-n-1)) & 0x01);
  1464  0042  0848               	movf	sentdata@slave_address,w
  1465  0043  00F4               	movwf	??_sentdata
  1466  0044  087C               	movf	_n,w
  1467  0045  0249               	subwf	sentdata@slave_length,w
  1468  0046  3EFF               	addlw	-1
  1469  0047  0A89               	incf	9,f
  1470  0048  284A               	goto	u184
  1471  0049                     u185:	
  1472  0049  36F4               	lsrf	??_sentdata,f
  1473  004A                     u184:	
  1474  004A  0B89               	decfsz	9,f
  1475  004B  2849               	goto	u185
  1476  004C  0874               	movf	??_sentdata,w
  1477  004D  3901               	andlw	1
  1478  004E  00F5               	movwf	??_sentdata+1
  1479  004F  087C               	movf	_n,w
  1480  0050  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1481  0051  0086               	movwf	6
  1482  0052  0187               	clrf	7
  1483  0053  0875               	movf	??_sentdata+1,w
  1484  0054  0081               	movwf	1
  1485  0055                     l896:	
  1486                           
  1487                           ;./LCM_sent_double_data.c: 58:     }
  1488  0055  3001               	movlw	1
  1489  0056  00F4               	movwf	??_sentdata
  1490  0057  0874               	movf	??_sentdata,w
  1491  0058  07FC               	addwf	_n,f
  1492  0059                     l898:	
  1493  0059  0849               	movf	sentdata@slave_length,w
  1494  005A  027C               	subwf	_n,w
  1495  005B  1C03               	skipc
  1496  005C  285E               	goto	u191
  1497  005D  285F               	goto	u190
  1498  005E                     u191:	
  1499  005E  2842               	goto	l894
  1500  005F                     u190:	
  1501  005F                     l900:	
  1502                           
  1503                           ;./LCM_sent_double_data.c: 61:     for ( n = slave_length; n < slave_length+bit; n++)
  1504  005F  0849               	movf	sentdata@slave_length,w
  1505  0060  00F4               	movwf	??_sentdata
  1506  0061  0874               	movf	??_sentdata,w
  1507  0062  00FC               	movwf	_n
  1508  0063  2880               	goto	l906
  1509  0064                     l902:	
  1510                           
  1511                           ;./LCM_sent_double_data.c: 62:     {;./LCM_sent_double_data.c: 63:         databuff[n] =
      +                           ((reg >> (bit-(n-slave_length)-1)) & 0x01);
  1512  0064  0020               	movlb	0	; select bank0
  1513  0065  084C               	movf	_reg+1,w
  1514  0066  00F5               	movwf	??_sentdata+1
  1515  0067  084B               	movf	_reg,w
  1516  0068  00F4               	movwf	??_sentdata
  1517  0069  087C               	movf	_n,w
  1518  006A  0273               	subwf	sentdata@bit,w
  1519  006B  0749               	addwf	sentdata@slave_length,w
  1520  006C  3EFF               	addlw	-1
  1521  006D  0A89               	incf	9,f
  1522  006E  2871               	goto	u204
  1523  006F                     u205:	
  1524  006F  36F5               	lsrf	??_sentdata+1,f
  1525  0070  0CF4               	rrf	??_sentdata,f
  1526  0071                     u204:	
  1527  0071  0B89               	decfsz	9,f
  1528  0072  286F               	goto	u205
  1529  0073  0874               	movf	??_sentdata,w
  1530  0074  3901               	andlw	1
  1531  0075  00F6               	movwf	??_sentdata+2
  1532  0076  087C               	movf	_n,w
  1533  0077  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1534  0078  0086               	movwf	6
  1535  0079  0187               	clrf	7
  1536  007A  0876               	movf	??_sentdata+2,w
  1537  007B  0081               	movwf	1
  1538  007C                     l904:	
  1539                           
  1540                           ;./LCM_sent_double_data.c: 64:     }
  1541  007C  3001               	movlw	1
  1542  007D  00F4               	movwf	??_sentdata
  1543  007E  0874               	movf	??_sentdata,w
  1544  007F  07FC               	addwf	_n,f
  1545  0080                     l906:	
  1546  0080  0849               	movf	sentdata@slave_length,w
  1547  0081  0773               	addwf	sentdata@bit,w
  1548  0082  00F4               	movwf	??_sentdata
  1549  0083  01F5               	clrf	??_sentdata+1
  1550  0084  0DF5               	rlf	??_sentdata+1,f
  1551  0085  0875               	movf	??_sentdata+1,w
  1552  0086  3A80               	xorlw	128
  1553  0087  3C80               	sublw	128
  1554  0088  1D03               	skipz
  1555  0089  288C               	goto	u215
  1556  008A  0874               	movf	??_sentdata,w
  1557  008B  027C               	subwf	_n,w
  1558  008C                     u215:	
  1559  008C  1C03               	skipc
  1560  008D  288F               	goto	u211
  1561  008E  2890               	goto	u210
  1562  008F                     u211:	
  1563  008F  2864               	goto	l902
  1564  0090                     u210:	
  1565  0090                     l83:	
  1566                           
  1567                           ;./LCM_sent_double_data.c: 67:     clk_control=1;
  1568  0090  01F9               	clrf	_clk_control
  1569  0091  0AF9               	incf	_clk_control,f
  1570  0092                     l908:	
  1571                           
  1572                           ;./LCM_sent_double_data.c: 68:     endsend=0;
  1573  0092  01FA               	clrf	_endsend
  1574                           
  1575                           ;./LCM_sent_double_data.c: 69:     while (sendbit!=0)
  1576  0093  28DE               	goto	l936
  1577  0094                     l910:	
  1578                           
  1579                           ;./LCM_sent_double_data.c: 72:         {;./LCM_sent_double_data.c: 73:             for(i
      +                          =0; i<= bit+slave_length; i++)
  1580  0094  01FB               	clrf	_i
  1581  0095  28C1               	goto	l932
  1582  0096                     l912:	
  1583                           
  1584                           ;./LCM_sent_double_data.c: 74:             {;./LCM_sent_double_data.c: 75:              
      +                             LATCbits.LATC5=databuff[i];
  1585  0096  087B               	movf	_i,w
  1586  0097  3E20               	addlw	(low (sentdata@databuff| 0))& (0+255)
  1587  0098  0086               	movwf	6
  1588  0099  0187               	clrf	7
  1589  009A  0C01               	rrf	1,w
  1590  009B  0022               	movlb	2	; select bank2
  1591  009C  1C03               	skipc
  1592  009D  128E               	bcf	14,5	;volatile
  1593  009E  1803               	skipnc
  1594  009F  168E               	bsf	14,5	;volatile
  1595  00A0                     l914:	
  1596                           
  1597                           ;./LCM_sent_double_data.c: 76:                 sendbit--;
  1598  00A0  3001               	movlw	1
  1599  00A1  0020               	movlb	0	; select bank0
  1600  00A2  02CD               	subwf	_sendbit,f
  1601  00A3                     l916:	
  1602                           
  1603                           ;./LCM_sent_double_data.c: 77:                 endsend++;
  1604  00A3  3001               	movlw	1
  1605  00A4  00F4               	movwf	??_sentdata
  1606  00A5  0874               	movf	??_sentdata,w
  1607  00A6  07FA               	addwf	_endsend,f
  1608  00A7                     l918:	
  1609                           
  1610                           ;./LCM_sent_double_data.c: 78:                 CLKOK=0;
  1611  00A7  01F8               	clrf	_CLKOK
  1612  00A8                     l920:	
  1613                           ;./LCM_sent_double_data.c: 79:                 while(!CLKOK)
  1614                           
  1615                           
  1616                           ;./LCM_sent_double_data.c: 79:                 while(!CLKOK)
  1617  00A8  0878               	movf	_CLKOK,w
  1618  00A9  1903               	btfsc	3,2
  1619  00AA  28AC               	goto	u221
  1620  00AB  28AD               	goto	u220
  1621  00AC                     u221:	
  1622  00AC  28A8               	goto	l920
  1623  00AD                     u220:	
  1624  00AD                     l922:	
  1625                           
  1626                           ;./LCM_sent_double_data.c: 83:                 if(endsend==bit+slave_length)
  1627  00AD  0873               	movf	sentdata@bit,w
  1628  00AE  0749               	addwf	sentdata@slave_length,w
  1629  00AF  00F4               	movwf	??_sentdata
  1630  00B0  01F5               	clrf	??_sentdata+1
  1631  00B1  0DF5               	rlf	??_sentdata+1,f
  1632  00B2  087A               	movf	_endsend,w
  1633  00B3  0674               	xorwf	??_sentdata,w
  1634  00B4  0475               	iorwf	??_sentdata+1,w
  1635  00B5  1D03               	skipz
  1636  00B6  28B8               	goto	u231
  1637  00B7  28B9               	goto	u230
  1638  00B8                     u231:	
  1639  00B8  28BD               	goto	l930
  1640  00B9                     u230:	
  1641  00B9                     l924:	
  1642                           
  1643                           ;./LCM_sent_double_data.c: 84:                 {;./LCM_sent_double_data.c: 85:          
      +                                     LATCbits.LATC5=0;
  1644  00B9  0022               	movlb	2	; select bank2
  1645  00BA  128E               	bcf	14,5	;volatile
  1646  00BB                     l926:	
  1647                           
  1648                           ;./LCM_sent_double_data.c: 86:                     clk_control=0;
  1649  00BB  01F9               	clrf	_clk_control
  1650  00BC  28E4               	goto	l94
  1651  00BD                     l930:	
  1652                           
  1653                           ;./LCM_sent_double_data.c: 89:             }
  1654  00BD  3001               	movlw	1
  1655  00BE  00F4               	movwf	??_sentdata
  1656  00BF  0874               	movf	??_sentdata,w
  1657  00C0  07FB               	addwf	_i,f
  1658  00C1                     l932:	
  1659  00C1  0873               	movf	sentdata@bit,w
  1660  00C2  0749               	addwf	sentdata@slave_length,w
  1661  00C3  00F4               	movwf	??_sentdata
  1662  00C4  01F5               	clrf	??_sentdata+1
  1663  00C5  0DF5               	rlf	??_sentdata+1,f
  1664  00C6  0875               	movf	??_sentdata+1,w
  1665  00C7  3A80               	xorlw	128
  1666  00C8  00F6               	movwf	??_sentdata+2
  1667  00C9  3080               	movlw	128
  1668  00CA  0276               	subwf	??_sentdata+2,w
  1669  00CB  1D03               	skipz
  1670  00CC  28CF               	goto	u245
  1671  00CD  087B               	movf	_i,w
  1672  00CE  0274               	subwf	??_sentdata,w
  1673  00CF                     u245:	
  1674  00CF  1803               	skipnc
  1675  00D0  28D2               	goto	u241
  1676  00D1  28D3               	goto	u240
  1677  00D2                     u241:	
  1678  00D2  2896               	goto	l912
  1679  00D3                     u240:	
  1680  00D3                     l86:	
  1681                           ;./LCM_sent_double_data.c: 90:         }
  1682                           
  1683                           
  1684                           ;./LCM_sent_double_data.c: 71:         while((LATCbits.LATC4==1)&&(CLK_count))
  1685  00D3  0022               	movlb	2	; select bank2
  1686  00D4  1E0E               	btfss	14,4	;volatile
  1687  00D5  28D7               	goto	u251
  1688  00D6  28D8               	goto	u250
  1689  00D7                     u251:	
  1690  00D7  28DE               	goto	l936
  1691  00D8                     u250:	
  1692  00D8                     l934:	
  1693  00D8  0020               	movlb	0	; select bank0
  1694  00D9  084F               	movf	_CLK_count,w
  1695  00DA  1D03               	btfss	3,2
  1696  00DB  28DD               	goto	u261
  1697  00DC  28DE               	goto	u260
  1698  00DD                     u261:	
  1699  00DD  2894               	goto	l910
  1700  00DE                     u260:	
  1701  00DE                     l936:	
  1702                           
  1703                           ;./LCM_sent_double_data.c: 69:     while (sendbit!=0)
  1704  00DE  0020               	movlb	0	; select bank0
  1705  00DF  084D               	movf	_sendbit,w
  1706  00E0  1D03               	btfss	3,2
  1707  00E1  28E3               	goto	u271
  1708  00E2  28E4               	goto	u270
  1709  00E3                     u271:	
  1710  00E3  28D3               	goto	l86
  1711  00E4                     u270:	
  1712  00E4                     l94:	
  1713  00E4  0008               	return
  1714  00E5                     __end_of_sentdata:	
  1715                           
  1716                           	psect	intentry
  1717  0004                     __pintentry:	
  1718 ;; *************** function _ISR *****************
  1719 ;; Defined at:
  1720 ;;		line 34 in file "./LCM_sent_double_data.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1734 ;;      Params:         0       0       0       0
  1735 ;;      Locals:         0       0       0       0
  1736 ;;      Temps:          0       0       0       0
  1737 ;;      Totals:         0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    1
  1741 ;; This function calls:
  1742 ;;		_CLK
  1743 ;; This function is called by:
  1744 ;;		Interrupt level 1
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748  0004                     _ISR:	
  1749                           
  1750                           ;incstack = 0
  1751  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1752                           
  1753                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1754  0005  3180               	pagesel	$
  1755  0006                     i1l992:	
  1756                           
  1757                           ;./LCM_sent_double_data.c: 36:    if(TMR0IF==1)
  1758  0006  0020               	movlb	0	; select bank0
  1759  0007  1E90               	btfss	16,5	;volatile
  1760  0008  280A               	goto	u32_21
  1761  0009  280B               	goto	u32_20
  1762  000A                     u32_21:	
  1763  000A  2810               	goto	i1l73
  1764  000B                     u32_20:	
  1765  000B                     i1l994:	
  1766                           
  1767                           ;./LCM_sent_double_data.c: 37:    {;./LCM_sent_double_data.c: 38:         CLK();
  1768  000B  3181  2127  3180   	fcall	_CLK
  1769  000E                     i1l996:	
  1770                           
  1771                           ;./LCM_sent_double_data.c: 39:         TMR0IF=0;
  1772  000E  0020               	movlb	0	; select bank0
  1773  000F  1290               	bcf	16,5	;volatile
  1774  0010                     i1l73:	
  1775  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1776  0011  0009               	retfie
  1777  0012                     __end_of_ISR:	
  1778                           
  1779                           	psect	text9
  1780  0127                     __ptext9:	
  1781 ;; *************** function _CLK *****************
  1782 ;; Defined at:
  1783 ;;		line 4 in file "./LCM_sent_double_data.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1797 ;;      Params:         0       0       0       0
  1798 ;;      Locals:         0       0       0       0
  1799 ;;      Temps:          1       0       0       0
  1800 ;;      Totals:         1       0       0       0
  1801 ;;Total ram usage:        1 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_ISR
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _CLK
  1812  0127                     _CLK:	
  1813  0127                     i1l938:	
  1814                           ;incstack = 0
  1815                           ; Regs used in _CLK: [wreg+status,2+status,0]
  1816                           
  1817                           
  1818                           ;./LCM_sent_double_data.c: 6:     if(clk_control==1)
  1819  0127  0379               	decf	_clk_control,w
  1820  0128  1D03               	btfss	3,2
  1821  0129  292B               	goto	u28_21
  1822  012A  292C               	goto	u28_20
  1823  012B                     u28_21:	
  1824  012B  2944               	goto	i1l948
  1825  012C                     u28_20:	
  1826  012C                     i1l940:	
  1827                           
  1828                           ;./LCM_sent_double_data.c: 7:     {;./LCM_sent_double_data.c: 8:         LATCbits.LATC4 
      +                          =! LATCbits.LATC4;
  1829  012C  1003               	clrc
  1830  012D  0022               	movlb	2	; select bank2
  1831  012E  1E0E               	btfss	14,4	;volatile
  1832  012F  1403               	setc
  1833  0130  1803               	btfsc	3,0
  1834  0131  2933               	goto	u29_21
  1835  0132  2936               	goto	u29_20
  1836  0133                     u29_21:	
  1837  0133  0022               	movlb	2	; select bank2
  1838  0134  160E               	bsf	14,4	;volatile
  1839  0135  2938               	goto	u30_24
  1840  0136                     u29_20:	
  1841  0136  0022               	movlb	2	; select bank2
  1842  0137  120E               	bcf	14,4	;volatile
  1843  0138                     u30_24:	
  1844  0138                     i1l942:	
  1845                           
  1846                           ;./LCM_sent_double_data.c: 9:         if(!LATCbits.LATC4)
  1847  0138  1A0E               	btfsc	14,4	;volatile
  1848  0139  293B               	goto	u31_21
  1849  013A  293C               	goto	u31_20
  1850  013B                     u31_21:	
  1851  013B  2948               	goto	i1l64
  1852  013C                     u31_20:	
  1853  013C                     i1l944:	
  1854                           
  1855                           ;./LCM_sent_double_data.c: 10:         {;./LCM_sent_double_data.c: 11:             CLKOK
      +                          =1;
  1856  013C  01F8               	clrf	_CLKOK
  1857  013D  0AF8               	incf	_CLKOK,f
  1858  013E                     i1l946:	
  1859                           
  1860                           ;./LCM_sent_double_data.c: 12:             CLK_count++;
  1861  013E  3001               	movlw	1
  1862  013F  00F0               	movwf	??_CLK
  1863  0140  0870               	movf	??_CLK,w
  1864  0141  0020               	movlb	0	; select bank0
  1865  0142  07CF               	addwf	_CLK_count,f
  1866  0143  2948               	goto	i1l64
  1867  0144                     i1l948:	
  1868                           
  1869                           ;./LCM_sent_double_data.c: 16:     {;./LCM_sent_double_data.c: 17:         CLK_count=0;
  1870  0144  0020               	movlb	0	; select bank0
  1871  0145  01CF               	clrf	_CLK_count
  1872  0146                     i1l950:	
  1873                           
  1874                           ;./LCM_sent_double_data.c: 18:         LATCbits.LATC4=1;
  1875  0146  0022               	movlb	2	; select bank2
  1876  0147  160E               	bsf	14,4	;volatile
  1877  0148                     i1l64:	
  1878  0148  0008               	return
  1879  0149                     __end_of_CLK:	
  1880  007E                     btemp	set	126	;btemp
  1881  007E                     int$flags	set	126
  1882  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         88
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     43      49
    BANK1            80      0      80
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Clear_Ram_data
    _main->_Clock_Source
    _main->_LCD_BIAS_DUTY
    _main->_LCD_ON
    _main->_system_enable
    _system_enable->_sentdata
    _LCD_ON->_sentdata
    _LCD_BIAS_DUTY->_sentdata
    _Clock_Source->_sentdata
    _Clear_Ram_data->_sentdata

Critical Paths under _ISR in COMMON

    _ISR->_CLK

Critical Paths under _main in BANK0

    _main->_sentdata
    _system_enable->_sentdata
    _LCD_ON->_sentdata
    _LCD_BIAS_DUTY->_sentdata
    _Clock_Source->_sentdata
    _Clear_Ram_data->_sentdata

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7890
                                             42 BANK0      1     1      0
                     _Clear_Ram_data
                       _Clock_Source
                      _LCD_BIAS_DUTY
                             _LCD_ON
                        _Timer0_Init
                           _sentdata
                      _system_enable
 ---------------------------------------------------------------------------------
 (1) _system_enable                                        1     1      0    1315
                                              7 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_ON                                               1     1      0    1315
                                              7 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _LCD_BIAS_DUTY                                        1     1      0    1315
                                              7 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _Clock_Source                                         1     1      0    1315
                                              7 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (1) _Clear_Ram_data                                       1     1      0    1315
                                              7 COMMON     1     1      0
                           _sentdata
 ---------------------------------------------------------------------------------
 (2) _sentdata                                            48    45      3    1315
                                              1 COMMON     6     3      3
                                              0 BANK0     42    42      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
                                _CLK
 ---------------------------------------------------------------------------------
 (4) _CLK                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Ram_data
     _sentdata
   _Clock_Source
     _sentdata
   _LCD_BIAS_DUTY
     _sentdata
   _LCD_ON
     _sentdata
   _Timer0_Init
   _sentdata
   _system_enable
     _sentdata

 _ISR (ROOT)
   _CLK

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jun 30 20:46:22 2020

                      _i 007B                        _n 007C     sentdata@slave_length 0049  
                     l83 0090                       l67 01D3                       l86 00D3  
                     l94 00E4          ??_LCD_BIAS_DUTY 0077                      l102 0193  
                    l111 017A                      l105 01AC                      l114 01C1  
                    l108 0161                      l800 01C2                      l810 01D2  
                    l802 01CB                      l900 005F                      l804 01CC  
                    l910 0094                      l902 0064                      l806 01CD  
                    l920 00A8                      l912 0096                      l904 007C  
                    l808 01CF                      l930 00BD                      l922 00AD  
                    l914 00A0                      l906 0080                      l924 00B9  
                    l916 00A3                      l932 00C1                      l908 0092  
                    l934 00D8                      l926 00BB                      l918 00A7  
                    l936 00DE                      l960 0194                      l952 017B  
                    l890 003B                      l962 0196                      l954 017D  
                    l970 014B                      l892 0040                      l884 0029  
                    l964 01A2                      l956 0189                      l980 0170  
                    l972 0157                      l894 0042                      l886 0033  
                    l990 01B9                      l966 01A4                      l958 018B  
                    l982 0172                      l974 0159                      _CLK 0127  
                    l896 0055                      l888 0037                      l984 01AD  
                    l976 0162                      l968 0149                      l898 0059  
                    l986 01AF                      l978 0164                      l988 01B7  
                    u210 0090                      u211 008F                      u220 00AD  
                    u204 0071                      u221 00AC                      u205 006F  
                    u230 00B9                      u231 00B8                      u215 008C  
                    u240 00D3                      u241 00D2                      u250 00D8  
                    u170 0030                      u251 00D7                      u260 00DE  
                    u261 00DD                      u245 00CF                      u270 00E4  
                    u190 005F                      u271 00E3                      u191 005E  
                    u184 004A                      u185 0049                      u337 0120  
                    u347 015C                      _ISR 0004                      u357 0175  
                    u367 018E                      u377 01A7                      u387 01BC  
                    _bit 004E                      _reg 004B                      wreg 0009  
           __CFG_LVP$OFF 0000                     ?_CLK 0070                     ?_ISR 0070  
                   l1030 00FB                     l1040 0108                     l1032 00FC  
                   l1024 00E5                     l1042 010B                     l1034 00FF  
                   l1026 00F7                     l1044 010D                     l1036 0102  
                   l1028 00F8                     l1046 011A                     l1038 0105  
                   l1048 011C                     i1l64 0148                     i1l73 0010  
                   _main 00E5                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E          ?_Clear_Ram_data 0070  
                   start 0012                    ??_CLK 0070                    ??_ISR 0071  
  __end_of_system_enable 0162     __end_of_Clock_Source 01AD                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _CLKOK 0078                    i1l940 012C  
                  i1l950 0146                    i1l942 0138                    i1l944 013C  
                  i1l946 013E                    i1l938 0127                    i1l948 0144  
                  i1l992 0006                    i1l994 000B                    i1l996 000E  
                  u30_24 0138                    u31_20 013C                    u31_21 013B  
                  u32_20 000B                    u32_21 000A                    _TMR0H 0016  
                  u28_20 012C                    u28_21 012B                    u29_20 0136  
                  u29_21 0133           __CFG_BORV$HIGH 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0013  
           __end_of_main 0127                   ??_main 004A                   _LCD_ON 0162  
                 _TMR0IF 0085            ??_Timer0_Init 0071         __end_of_sentdata 00E5  
__end_of__initialization 0024    __size_of_Clock_Source 0019           __pcstackCOMMON 0070  
    __end_of_Timer0_Init 01D4         ??_Clear_Ram_data 0077               __pbssBANK0 004E  
             __pbssBANK1 00A0                  ?_LCD_ON 0070             _Clock_Source 0194  
             __pmaintext 00E5         sentdata@databuff 0020               __pintentry 0004  
    __CFG_RSTOSC$HFINT32 0000    __end_of_LCD_BIAS_DUTY 0194          __size_of_LCD_ON 0019  
            _Timer0_Init 01C2                ?_sentdata 0071                  __ptext1 0149  
                __ptext2 01C2                  __ptext3 0162                  __ptext4 017B  
                __ptext5 0194                  __ptext6 01AD                  __ptext7 0027  
                __ptext9 0127                  _endsend 007A             __size_of_CLK 0022  
           __size_of_ISR 000E                  _sendbit 004D                _CLK_count 004F  
                clrloop0 01D5     end_of_initialization 0024   __size_of_system_enable 0019  
            sentdata@bit 0073               ??_sentdata 0074                _TRISCbits 008E  
       __CFG_FEXTOSC$OFF 0000           __end_of_LCD_ON 017B            _system_enable 0149  
    start_initialization 0013              __end_of_CLK 0149              __end_of_ISR 0012  
               ??_LCD_ON 0077           ?_system_enable 0070              __pbssCOMMON 0078  
              ___latbits 0000            __pcstackBANK0 0020                __pnvBANK0 004B  
           ?_Timer0_Init 0070        __size_of_sentdata 00BE              _clk_control 0079  
               _LATCbits 010E                clear_ram0 01D4                 _PIE0bits 0090  
 __size_of_LCD_BIAS_DUTY 0019                 _PIR0bits 0010  __size_of_Clear_Ram_data 0015  
        ??_system_enable 0077                _testpoint 0050            sentdata@F4816 00A0  
             _ANSELCbits 018E            _LCD_BIAS_DUTY 017B               _T0CON0bits 0017  
             _T0CON1bits 0018                 _databuff 00C8            ?_Clock_Source 0070  
          __size_of_main 0042                 _sentdata 0027     __size_of_Timer0_Init 0012  
               int$flags 007E           ?_LCD_BIAS_DUTY 0070               _INTCONbits 000B  
           sentdata@data 0071           ??_Clock_Source 0077                 intlevel1 0000  
         _Clear_Ram_data 01AD   __end_of_Clear_Ram_data 01C2    sentdata@slave_address 0048  
